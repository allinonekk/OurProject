#region Header

//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v3.0.</auto-generated>
//------------------------------------------------------------------------------

#endregion Header

namespace AllInOne.Legal.Entities.BackEnd
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;

    /// <summary>Class which represents the entity 'Document.DocComments'</summary>
    public partial class Temp_ProcessingInfo : IDocument
    {
       
        #region Constructors

        /// <summary>
        /// Initializes a new instance of the <see cref="Temp_ProcessingInfoEntity"/> class.
        /// </summary>
        public Temp_ProcessingInfo()
            : base()
        {
        }

        #endregion Constructors

        #region Properties

        public virtual string WorkflowSerialNo { get; set; }
        public virtual string DocID { get; set; }
        public virtual string ProcessedBy { get; set; }
        public virtual DateTime ProcessedTime { get; set; }
        public virtual string DocStatusCode { get; set; }
        public virtual string BackdateApprInd { get; set; }
        public virtual DateTime? BackDateTime { get; set; }
        public virtual string JOUserIdApprBackDate { get; set; }
        public virtual string BackDateReasonFrLawFirm { get; set; }
        public virtual string BackDateReasonFrCourt { get; set; }
        public virtual DateTime? HearingDateTime { get; set; }
        public virtual string SpecHandlingReqInd { get; set; }
        public virtual string SpecHandlingReqRsn { get; set; }
        public virtual string SpecHandlingReqRem { get; set; }
        public virtual string WaiverInd { get; set; }
        public virtual string CurrencyCode { get; set; }
        public virtual decimal? LFWaiverReqFee { get; set; }
        public virtual string LFWaiverReqReason { get; set; }
        public virtual string WaiverApproveInd { get; set; }
        public virtual string WaiverApproveUserId { get; set; }
        public virtual decimal? WaiverApprFee { get; set; }
        public virtual string WaiverApprReason { get; set; }
        public virtual string Remarks { get; set; }
        public virtual string LastModifiedBy { get; set; }
        public virtual DateTime LastModifiedDate { get; set; }
        public virtual decimal? DocFeeWaived { get; set; }
        public virtual decimal? TransFeeWaived { get; set; }
        public virtual decimal? ProcFeeWaived { get; set; }
        public virtual decimal? UrgFeeWaived { get; set; }
        public virtual decimal? TotalWaived { get; set; }
        public virtual decimal? TotalPayable { get; set; }
        public virtual decimal? AdminFee { get; set; }
        public virtual string RejectionReason { get; set; }
        public virtual string processingstatus { get; set; }
        public virtual string ErrorMsg { get; set; }
        public virtual int? AttemptCount { get; set; }
        public virtual string ReqDecision { get; set; }
        public virtual string ReqDecisionRemark { get; set; }
        public virtual string HrgDateToBeFixedInd { get; set; }
        public virtual string IsFinalAdjournment { get; set; }
        public virtual decimal? ColorPageFee { get; set; }
        public virtual decimal? DocFee { get; set; }
        public virtual decimal? TotalFeeComp { get; set; }
        public virtual string RejectionFeeActionType { get; set; }
        public virtual DateTime? ActualTaskProcessingDateTime { get; set; }

        #endregion Properties

        #region Methods

        /// <summary>Determines whether the specified object is equal to this instance.</summary>
        /// <param name="obj">The <see cref="System.Object"/> to compare with this instance.</param>
        /// <returns><c>true</c> if the specified <see cref="System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        public override bool Equals(object obj)
        {
            if (obj == null)
            {
                return false;
            }

            Temp_ProcessingInfo toCompareWith = obj as Temp_ProcessingInfo;
            return toCompareWith == null ? false : ((this.WorkflowSerialNo == toCompareWith.WorkflowSerialNo) && (this.DocID == toCompareWith.DocID));
        }

        /// <summary>Returns a hash code for this instance.</summary>
        /// <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        public override int GetHashCode()
        {
            int toReturn = base.GetHashCode();
            toReturn ^= this.DocID.GetHashCode();
            toReturn ^= this.WorkflowSerialNo.GetHashCode();
            return toReturn;
        }

        #endregion Methods
    }
}