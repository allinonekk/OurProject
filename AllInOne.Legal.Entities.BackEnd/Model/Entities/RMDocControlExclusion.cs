#region Header

//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v3.0.</auto-generated>
//------------------------------------------------------------------------------

#endregion Header

namespace AllInOne.Legal.Entities.BackEnd
{
    using System;

    /// <summary>Class which represents the entity 'Master.RMDocControlExclusion'</summary>
    [Serializable]
    public partial class RMDocControlExclusion : IMaster
    {
        #region Fields
        private System.String rMDocControlExclusionId;
        private MForumType ForumID;
        private MCaseType CaseTypeCode;
        private MCaseType SubCaseTypeCode;
        private MDocCode DocCode;
        
        #endregion Fields

        /// <summary>Initializes a new instance of the <see cref="RMHrgSlotNOC"/> class.</summary>
        public RMDocControlExclusion()
            : base()
        {

        }

        #region Properties

        public virtual string RMDocControlExclusionId 
        {
            get { return rMDocControlExclusionId; }
            set { rMDocControlExclusionId = value; }
        }
        public virtual MForumType MForumType 
        {
            get { return ForumID; }
            set { ForumID = value; }
        }
        public virtual MCaseType MCaseType
        {
            get { return CaseTypeCode; }
            set { CaseTypeCode = value; }
        }
        public virtual MCaseType MSubCaseType
        {
            get { return SubCaseTypeCode; }
            set { SubCaseTypeCode = value; }
        }
        public virtual MDocCode MDocCode
        {
            get { return DocCode; }
            set { DocCode = value; }
        }
        public virtual string IsInterfaced { get; set; }
        public virtual string LastModifiedBy { get; set; }
        public virtual DateTime LastModifiedDate { get; set; }        
        #endregion Properties

        #region Methods

        /// <summary>Determines whether the specified object is equal to this instance.</summary>
        /// <param name="obj">The <see cref="System.Object"/> to compare with this instance.</param>
        /// <returns><c>true</c> if the specified <see cref="System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        public override bool Equals(object obj)
        {
            if (obj == null)
            {
                return false;
            }
            RMDocControlExclusion toCompareWith = obj as RMDocControlExclusion;
            return toCompareWith == null ? false : ((this.RMDocControlExclusionId == toCompareWith.RMDocControlExclusionId));
        }

        /// <summary>Returns a hash code for this instance.</summary>
        /// <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        public override int GetHashCode()
        {
            int toReturn = base.GetHashCode();
            toReturn ^= this.RMDocControlExclusionId.GetHashCode();
            return toReturn;
        }

        #endregion Methods
    }
}