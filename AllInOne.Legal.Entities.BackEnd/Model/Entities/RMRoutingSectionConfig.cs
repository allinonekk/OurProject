#region Header

//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v3.0.</auto-generated>
//------------------------------------------------------------------------------

#endregion Header

namespace AllInOne.Legal.Entities.BackEnd
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;

    /// <summary>Class which represents the entity 'Master.RMRoutingSectionConfig'</summary>
    public partial class RMRoutingSectionConfig : IMaster
    {
        #region Properties

        /// <summary>Gets or sets the ObsInd field. </summary>
        public virtual System.String DocCode
        {
            get;
            set;
        }

        /// <summary>Gets or sets the ObsInd field. </summary>
        public virtual System.String ForumId
        {
            get;
            set;
        }

        /// <summary>Gets or sets the LastModifiedBy field. </summary>
        public virtual System.String LastModifiedBy
        {
            get;
            set;
        }

        /// <summary>Gets or sets the LastModifiedDate field. </summary>
        public virtual System.DateTime LastModifiedDate
        {
            get;
            set;
        }

        /// <summary>Gets or sets the ObsInd field. </summary>
        public virtual MCaseType MCaseType
        {
            get;
            set;
        }

        /// <summary>Gets or sets the Description field. </summary>
        public virtual MSection MSection
        {
            get;
            set;
        }

        /// <summary>Gets or sets the ObsInd field. </summary>
        public virtual MCaseType MSubCaseType
        {
            get;
            set;
        }

        /// <summary>Gets or sets the ObsInd field. </summary>
        public virtual System.String ObsInd
        {
            get;
            set;
        }

        /// <summary>Gets or sets the AASDisciplinaryTypeCode field. </summary>
        public virtual System.String RMRoutingSectionConfigId
        {
            get;
            set;
        }

        /// <summary>Gets or sets the RoleCode field. </summary>
        public virtual System.String RoleCode
        {
            get;
            set;
        }

        /// <summary>Gets or sets the MNOC field. </summary>
        public virtual MNOC MNOC
        {
            get;
            set;
        }

        /// <summary>Gets or sets the MLegislationAct field. </summary>
        public virtual MLegislationAct MLegislationAct
        {
            get;
            set;
        }

        /// <summary>Gets or sets the MProvision field. </summary>
        public virtual MProvision MProvision
        {
            get;
            set;
        }

        public virtual string ProvisionNo
        {
            get;
            set;
        }

        /// <summary>Gets or sets the LastSectionAssignedDate field. </summary>
        public virtual Nullable<System.DateTime> LastSectionAssignedDate
        {
            get;
            set;
        }

        public virtual string ByPassCaseOfficerSection
        {
            get;
            set;
        }

        public virtual string CaseTypeAdditionalAttrType
        {
            get;
            set;
        }

        public virtual string CaseTypeAdditionalAttrValue
        {
            get;
            set;
        }

        #endregion Properties

        #region Methods

        /// <summary>Determines whether the specified object is equal to this instance.</summary>
        /// <param name="obj">The <see cref="System.Object"/> to compare with this instance.</param>
        /// <returns><c>true</c> if the specified <see cref="System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        public override bool Equals(object obj)
        {
            if (obj == null)
            {
                return false;
            }
            RMRoutingSectionConfig toCompareWith = obj as RMRoutingSectionConfig;
            return toCompareWith == null ? false : ((this.RMRoutingSectionConfigId == toCompareWith.RMRoutingSectionConfigId));
        }

        /// <summary>Returns a hash code for this instance.</summary>
        /// <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        public override int GetHashCode()
        {
            int toReturn = base.GetHashCode();
            toReturn ^= this.RMRoutingSectionConfigId.GetHashCode();
            return toReturn;
        }

        #endregion Methods
    }
}