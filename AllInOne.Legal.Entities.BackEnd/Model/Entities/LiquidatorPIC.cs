#region Header

//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v3.0.</auto-generated>
//------------------------------------------------------------------------------

#endregion Header

namespace AllInOne.Legal.Entities.BackEnd
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;

    /// <summary>Class which represents the entity 'Common.LiquidatorPIC'</summary>
    public partial class LiquidatorPIC : ICommon
    {
        #region Fields

        private System.String _addressAvailabilityInd;
        private System.String _aICRemarks;
        private System.String _formerName;
        private System.String _fullName;
        private System.String _idNumber;
        private System.String _idRemarks;
        private System.String _lastModifiedBy;
        private System.DateTime _lastModifiedDate;

        //private Liquidator _liquidator;
        private System.Collections.Generic.ICollection<LiquidatorPICAddress> _liquidatorPICAddresses;
        private System.Collections.Generic.ICollection<LiquidatorPICAlias> _liquidatorPICAliases;
        private System.String _liquidatorPICId;
        private MActingInCapacity _mActingInCapacity;
        private MCountry _mCountry;
        private MEntityType _mEntityType;
        private MGender _mGender;
        private MPersonIDGroup _mPersonIDGroup;
        private MPersonIDType _mPersonIDType;
        private System.String _submissionGroupId;

        #endregion Fields

        #region Constructors

        /// <summary>Initializes a new instance of the <see cref="LiquidatorPIC"/> class.</summary>
        public LiquidatorPIC()
            : base()
        {
            _liquidatorPICAddresses = new System.Collections.Generic.HashSet<LiquidatorPICAddress>();
            _liquidatorPICAliases = new System.Collections.Generic.HashSet<LiquidatorPICAlias>();
        }

        #endregion Constructors

        #region Properties

        /// <summary>Gets or sets the AddressAvailabilityInd field. </summary>
        public virtual System.String AddressAvailabilityInd
        {
            get { return _addressAvailabilityInd; }
            set { _addressAvailabilityInd = value; }
        }

        /// <summary>Gets or sets the AICRemarks field. </summary>
        public virtual System.String AICRemarks
        {
            get { return _aICRemarks; }
            set { _aICRemarks = value; }
        }

        /// <summary>Gets or sets the FormerName field. </summary>
        public virtual System.String FormerName
        {
            get { return _formerName; }
            set { _formerName = value; }
        }

        /// <summary>Gets or sets the FullName field. </summary>
        public virtual System.String FullName
        {
            get { return _fullName; }
            set { _fullName = value; }
        }

        /// <summary>Gets or sets the IdNumber field. </summary>
        public virtual System.String IdNumber
        {
            get { return _idNumber; }
            set { _idNumber = value; }
        }

        /// <summary>Gets or sets the IdRemarks field. </summary>
        public virtual System.String IdRemarks
        {
            get { return _idRemarks; }
            set { _idRemarks = value; }
        }

        /// <summary>Gets or sets the LastModifiedBy field. </summary>
        public virtual System.String LastModifiedBy
        {
            get { return _lastModifiedBy; }
            set { _lastModifiedBy = value; }
        }

        /// <summary>Gets or sets the LastModifiedDate field. </summary>
        public virtual System.DateTime LastModifiedDate
        {
            get { return _lastModifiedDate; }
            set { _lastModifiedDate = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Common.LiquidatorPIC.Liquidator - Common.Liquidator.LiquidatorPICs (m:1)'</summary>
        //public virtual Liquidator Liquidator
        //{
        //    get { return _liquidator; }
        //    set { _liquidator = value; }
        //}
        /// <summary>Gets or sets the LiquidatorId field. </summary>
        public virtual System.String LiquidatorId
        {
            get;
            set;
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Common.LiquidatorPICAddress.LiquidatorPIC - Common.LiquidatorPIC.LiquidatorPICAddresses (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<LiquidatorPICAddress> LiquidatorPICAddresses
        {
            get { return _liquidatorPICAddresses; }
            set { _liquidatorPICAddresses = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Common.LiquidatorPICAlias.LiquidatorPIC - Common.LiquidatorPIC.LiquidatorPICAliases (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<LiquidatorPICAlias> LiquidatorPICAliases
        {
            get { return _liquidatorPICAliases; }
            set { _liquidatorPICAliases = value; }
        }

        /// <summary>Gets or sets the LiquidatorPICId field. </summary>
        public virtual System.String LiquidatorPICId
        {
            get { return _liquidatorPICId; }
            set { _liquidatorPICId = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Common.LiquidatorPIC.MActingInCapacity - Master.MActingInCapacity.LiquidatorPICs (m:1)'</summary>
        public virtual MActingInCapacity MActingInCapacity
        {
            get { return _mActingInCapacity; }
            set { _mActingInCapacity = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Common.LiquidatorPIC.MCountry - Master.MCountry.LiquidatorPICs (m:1)'</summary>
        public virtual MCountry MCountry
        {
            get { return _mCountry; }
            set { _mCountry = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Common.LiquidatorPIC.MEntityType - Master.MEntityType.LiquidatorPICs (m:1)'</summary>
        public virtual MEntityType MEntityType
        {
            get { return _mEntityType; }
            set { _mEntityType = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Common.LiquidatorPIC.MGender - Master.MGender.LiquidatorPICs (m:1)'</summary>
        public virtual MGender MGender
        {
            get { return _mGender; }
            set { _mGender = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Common.LiquidatorPIC.MPersonIDGroup - Master.MPersonIDGroup.LiquidatorPICs (m:1)'</summary>
        public virtual MPersonIDGroup MPersonIDGroup
        {
            get { return _mPersonIDGroup; }
            set { _mPersonIDGroup = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Common.LiquidatorPIC.MPersonIDType - Master.MPersonIDType.LiquidatorPICs (m:1)'</summary>
        public virtual MPersonIDType MPersonIDType
        {
            get { return _mPersonIDType; }
            set { _mPersonIDType = value; }
        }

        /// <summary>Gets or sets the SubmissionGroupId field. </summary>
        public virtual System.String SubmissionGroupId
        {
            get { return _submissionGroupId; }
            set { _submissionGroupId = value; }
        }

        #endregion Properties

        #region Methods

        /// <summary>Determines whether the specified object is equal to this instance.</summary>
        /// <param name="obj">The <see cref="System.Object"/> to compare with this instance.</param>
        /// <returns><c>true</c> if the specified <see cref="System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        public override bool Equals(object obj)
        {
            if(obj == null)
            {
                return false;
            }
            LiquidatorPIC toCompareWith = obj as LiquidatorPIC;
            return toCompareWith == null ? false : ((this.LiquidatorPICId == toCompareWith.LiquidatorPICId));
        }

        /// <summary>Returns a hash code for this instance.</summary>
        /// <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        public override int GetHashCode()
        {
            int toReturn = base.GetHashCode();
            toReturn ^= this.LiquidatorPICId.GetHashCode();
            return toReturn;
        }

        #endregion Methods
    }
}