#region Header

//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v3.0.</auto-generated>
//------------------------------------------------------------------------------

#endregion Header

namespace AllInOne.Legal.Entities.BackEnd
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;

    /// <summary>Class which represents the entity 'Master.MFilingFee'</summary>
    public partial class MFilingFee : IMaster
    {
        #region Fields

        private System.String _feeRuleCode;
        private System.String _feeRuleType;
        private System.String _forumId;
        private System.String _isSystemRule;
        private System.String _lastModifiedBy;
        private System.DateTime _lastModifiedDate;
        private System.Collections.Generic.ICollection<MFilingFeeChargingMechanism> _mFilingFeeChargingMechanisms;
        private MFilingFeeType _mFilingFeeType;
        private System.Collections.Generic.ICollection<MHRGBeforeType> _mHRGBeforeTypes;
        private System.String _obsInd;
        private System.Collections.Generic.ICollection<RequestDocDetail> _requestDocDetails;
        private System.String _rOCReferences;
        private System.String _ruleName;

        #endregion Fields

        #region Constructors

        /// <summary>Initializes a new instance of the <see cref="MFilingFee"/> class.</summary>
        public MFilingFee()
            : base()
        {
            _mFilingFeeChargingMechanisms = new System.Collections.Generic.HashSet<MFilingFeeChargingMechanism>();
            _mHRGBeforeTypes = new System.Collections.Generic.HashSet<MHRGBeforeType>();
            _requestDocDetails = new System.Collections.Generic.HashSet<RequestDocDetail>();
        }

        #endregion Constructors

        #region Properties

        /// <summary>Gets or sets the FeeRuleCode field. </summary>
        public virtual System.String FeeRuleCode
        {
            get { return _feeRuleCode; }
            set { _feeRuleCode = value; }
        }

        /// <summary>Gets or sets the FeeRuleType field. </summary>
        public virtual System.String FeeRuleType
        {
            get { return _feeRuleType; }
            set { _feeRuleType = value; }
        }

        /// <summary>Gets or sets the ForumId field. </summary>
        public virtual System.String ForumId
        {
            get { return _forumId; }
            set { _forumId = value; }
        }

        /// <summary>Gets or sets the IsSystemRule field. </summary>
        public virtual System.String IsSystemRule
        {
            get { return _isSystemRule; }
            set { _isSystemRule = value; }
        }

        /// <summary>Gets or sets the LastModifiedBy field. </summary>
        public virtual System.String LastModifiedBy
        {
            get { return _lastModifiedBy; }
            set { _lastModifiedBy = value; }
        }

        /// <summary>Gets or sets the LastModifiedDate field. </summary>
        public virtual System.DateTime LastModifiedDate
        {
            get { return _lastModifiedDate; }
            set { _lastModifiedDate = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Master.MFilingFeeChargingMechanism.MFilingFee - Master.MFilingFee.MFilingFeeChargingMechanisms (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<MFilingFeeChargingMechanism> MFilingFeeChargingMechanisms
        {
            get { return _mFilingFeeChargingMechanisms; }
            set { _mFilingFeeChargingMechanisms = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Master.MFilingFee.MFilingFeeType - Master.MFilingFeeType.MFilingFees (m:1)'</summary>
        public virtual MFilingFeeType MFilingFeeType
        {
            get { return _mFilingFeeType; }
            set { _mFilingFeeType = value; }
        }

        public virtual MFilingFeeLegislationAct MFilingFeeLegislationAct
        {
            get;
            set;
        }

        public virtual decimal? TierType
        { 
            get;
            set;
        }
        /// <summary>Represents the navigator which is mapped onto the association 'Master.MHRGBeforeType.MFilingFee - Master.MFilingFee.MHRGBeforeTypes (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<MHRGBeforeType> MHRGBeforeTypes
        {
            get { return _mHRGBeforeTypes; }
            set { _mHRGBeforeTypes = value; }
        }

        /// <summary>Gets or sets the ObsInd field. </summary>
        public virtual System.String ObsInd
        {
            get { return _obsInd; }
            set { _obsInd = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Subsequent.RequestDocDetail.MFilingFee - Master.MFilingFee.RequestDocDetails (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<RequestDocDetail> RequestDocDetails
        {
            get { return _requestDocDetails; }
            set { _requestDocDetails = value; }
        }

        /// <summary>Gets or sets the ROCReferences field. </summary>
        public virtual System.String ROCReferences
        {
            get { return _rOCReferences; }
            set { _rOCReferences = value; }
        }

        /// <summary>Gets or sets the RuleName field. </summary>
        public virtual System.String RuleName
        {
            get { return _ruleName; }
            set { _ruleName = value; }
        }

        #endregion Properties

        #region Methods

        /// <summary>Determines whether the specified object is equal to this instance.</summary>
        /// <param name="obj">The <see cref="System.Object"/> to compare with this instance.</param>
        /// <returns><c>true</c> if the specified <see cref="System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        public override bool Equals(object obj)
        {
            if(obj == null)
            {
                return false;
            }
            MFilingFee toCompareWith = obj as MFilingFee;
            return toCompareWith == null ? false : ((this.FeeRuleCode == toCompareWith.FeeRuleCode));
        }

        /// <summary>Returns a hash code for this instance.</summary>
        /// <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        public override int GetHashCode()
        {
            int toReturn = base.GetHashCode();
            toReturn ^= this.FeeRuleCode.GetHashCode();
            return toReturn;
        }

        #endregion Methods
    }
}