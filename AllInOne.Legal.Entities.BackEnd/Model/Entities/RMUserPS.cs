namespace AllInOne.Legal.Entities.BackEnd
{
	using System;
	using System.Collections.Generic;
	using System.ComponentModel;
	using AllInOne.Legal.Entities.BackEnd;

	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping template
	/// </summary>
	public class RMUserPS : IBackEndSpecific
	{

		#region Private Members

		private System.String m_psuserid; 						
		private System.String m_jouserid; 			
		private System.String m_obsind; 
		private System.String m_lastmodifiedby; 
		private DateTime m_lastmodifieddate; 		

		#endregion

		public RMUserPS() : base() {}


		#region Public Properties
				
		public virtual System.String PSUserId
		{
			get { return m_psuserid; }
			set
			{
				if( value == null )
					throw new ArgumentOutOfRangeException("Null value not allowed for PSUserId", value, "null");

				m_psuserid = value;
			}

		}			
		
		public virtual System.String JOUserId
		{
			get { return m_jouserid; }
			set
			{
				if( value == null )
					throw new ArgumentOutOfRangeException("Null value not allowed for JOUserId", value, "null");

				m_jouserid = value;
			}

		}	
		
	
		public virtual System.String ObsInd
		{
			get { return m_obsind; }
			set
			{
				m_obsind = value;
			}

		}
				
		public virtual System.String LastModifiedBy
		{
			get { return m_lastmodifiedby; }
			set
			{
				m_lastmodifiedby = value;
			}

		}
				
		public virtual DateTime LastModifiedDate
		{
			get { return m_lastmodifieddate; }
			set
			{
				m_lastmodifieddate = value;
			}

		}
			
				
		#endregion 
#region ToString, Equals And HashCode Overrides
		/// <summary>Determines whether the specified object is equal to this instance.</summary>
        /// <param name="obj">The <see cref="System.Object"/> to compare with this instance.</param>
        /// <returns><c>true</c> if the specified <see cref="System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        public override bool Equals(object obj)
        {
            if (obj == null)
            {
                return false;
            }
            RMUserPS toCompareWith = obj as RMUserPS;
			return toCompareWith == null ? false : ((this.JOUserId == toCompareWith.JOUserId && this.PSUserId== toCompareWith.PSUserId));
        }

        /// <summary>Returns a hash code for this instance.</summary>
        /// <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        public override int GetHashCode()
        {
            int toReturn = base.GetHashCode();
            toReturn ^= this.JOUserId.GetHashCode();
            toReturn ^= this.PSUserId.GetHashCode();
            return toReturn;
        }
		
		public override string ToString()
        {
			return 		"PSUserId=" + PSUserId + "--" + 
		"JOUserId=" + JOUserId + "--" + 
		"ObsInd=" + ObsInd + "--" + 
		"LastModifiedBy=" + LastModifiedBy + "--" + 
		"LastModifiedDate=" + LastModifiedDate + "--" + 
		"";
        }
		
		#endregion

	}
}
