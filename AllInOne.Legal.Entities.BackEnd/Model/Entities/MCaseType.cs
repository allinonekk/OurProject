#region Header

//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v3.0.</auto-generated>
//------------------------------------------------------------------------------

#endregion Header

namespace AllInOne.Legal.Entities.BackEnd
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;

    /// <summary>Class which represents the entity 'Master.MCaseType'</summary>
    public partial class MCaseType : IMaster
    {
        #region Fields

        private System.String _caseFileLocation;
        private System.Collections.Generic.ICollection<CaseInfo> _caseInfos;
        private System.String _caseLevelInd;
        private System.String _caseTypeCode;
        private System.String _caseTypeGroupCode;
        private System.String _description;
        private System.String _isInterfaced;
        private System.String _lastModifiedBy;
        private System.DateTime _lastModifiedDate;
        private System.Collections.Generic.ICollection<MDocControl> _mCTCaseType;
        private System.Collections.Generic.ICollection<MDocControl> _mCTSubCaseType;

        //private System.Collections.Generic.ICollection<MEMSWritAppt> _mEMSWritAppts;
        private System.Collections.Generic.ICollection<MNAAAlertEventsTemplate> _mNAAAlertEventsTemplates;
        private System.Collections.Generic.ICollection<MPartyAmendmentConfig> _mPartyAmendmentConfigs;
        private System.String _obsInd;
        private System.String _preROCInd;
        private System.Collections.Generic.ICollection<RMCDRAutoFixTimeLine> _rMCDRAutoFixTimeLines;
        private System.Collections.Generic.ICollection<RMDocCodeHRGType> _rMDocCodeHRGTypes;
        private System.Collections.Generic.ICollection<SubCaseInfo> _subCaseInfos;

        private System.String _lABAccessInd;

        #endregion Fields

        #region Constructors

        /// <summary>Initializes a new instance of the <see cref="MCaseType"/> class.</summary>
        public MCaseType()
            : base()
        {
            _caseInfos = new System.Collections.Generic.HashSet<CaseInfo>();
            _mCTCaseType = new System.Collections.Generic.HashSet<MDocControl>();
            _mCTSubCaseType = new System.Collections.Generic.HashSet<MDocControl>();
            //_mEMSWritAppts = new System.Collections.Generic.HashSet<MEMSWritAppt>();
            _mNAAAlertEventsTemplates = new System.Collections.Generic.HashSet<MNAAAlertEventsTemplate>();
            _mPartyAmendmentConfigs = new System.Collections.Generic.HashSet<MPartyAmendmentConfig>();
            _rMCDRAutoFixTimeLines = new System.Collections.Generic.HashSet<RMCDRAutoFixTimeLine>();
            _rMDocCodeHRGTypes = new System.Collections.Generic.HashSet<RMDocCodeHRGType>();
            _subCaseInfos = new System.Collections.Generic.HashSet<SubCaseInfo>();
        }

        #endregion Constructors

        #region Properties

        /// <summary>Gets or sets the CaseFileLocation field. </summary>
        public virtual System.String CaseFileLocation
        {
            get { return _caseFileLocation; }
            set { _caseFileLocation = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Case.CaseInfo.MCaseType - Master.MCaseType.CaseInfos (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<CaseInfo> CaseInfos
        {
            get { return _caseInfos; }
            set { _caseInfos = value; }
        }

        /// <summary>Gets or sets the CaseLevelInd field. </summary>
        public virtual System.String CaseLevelInd
        {
            get { return _caseLevelInd; }
            set { _caseLevelInd = value; }
        }

        /// <summary>Gets or sets the CaseTypeCode field. </summary>
        public virtual System.String CaseTypeCode
        {
            get { return _caseTypeCode; }
            set { _caseTypeCode = value; }
        }

        /// <summary>Gets or sets the CaseTypeGroupCode field. </summary>
        public virtual System.String CaseTypeGroupCode
        {
            get { return _caseTypeGroupCode; }
            set { _caseTypeGroupCode = value; }
        }

        /// <summary>Gets or sets the Description field. </summary>
        public virtual System.String Description
        {
            get { return _description; }
            set { _description = value; }
        }

        /// <summary>Gets or sets the IsInterfaced field. </summary>
        public virtual System.String IsInterfaced
        {
            get { return _isInterfaced; }
            set { _isInterfaced = value; }
        }

        /// <summary>Gets or sets the LastModifiedBy field. </summary>
        public virtual System.String LastModifiedBy
        {
            get { return _lastModifiedBy; }
            set { _lastModifiedBy = value; }
        }

        /// <summary>Gets or sets the LastModifiedDate field. </summary>
        public virtual System.DateTime LastModifiedDate
        {
            get { return _lastModifiedDate; }
            set { _lastModifiedDate = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Master.MDocControl.MDCCaseType - Master.MCaseType.MCTCaseType (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<MDocControl> MCTCaseType
        {
            get { return _mCTCaseType; }
            set { _mCTCaseType = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Master.MDocControl.MDCSubCaseType - Master.MCaseType.MCTSubCaseType (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<MDocControl> MCTSubCaseType
        {
            get { return _mCTSubCaseType; }
            set { _mCTSubCaseType = value; }
        }

        /*
        /// <summary>Represents the navigator which is mapped onto the association 'Master.MEMSWritAppt.MCaseType - Master.MCaseType.MEMSWritAppts (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<MEMSWritAppt> MEMSWritAppts
        {
            get { return _mEMSWritAppts; }
            set { _mEMSWritAppts = value; }
        }*/
        /// <summary>Represents the navigator which is mapped onto the association 'Master.MNAAAlertEventsTemplate.MCaseType - Master.MCaseType.MNAAAlertEventsTemplates (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<MNAAAlertEventsTemplate> MNAAAlertEventsTemplates
        {
            get { return _mNAAAlertEventsTemplates; }
            set { _mNAAAlertEventsTemplates = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Master.MPartyAmendmentConfig.MCaseType - Master.MCaseType.MPartyAmendmentConfigs (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<MPartyAmendmentConfig> MPartyAmendmentConfigs
        {
            get { return _mPartyAmendmentConfigs; }
            set { _mPartyAmendmentConfigs = value; }
        }

        /// <summary>Gets or sets the ObsInd field. </summary>
        public virtual System.String ObsInd
        {
            get { return _obsInd; }
            set { _obsInd = value; }
        }

        /// <summary>Gets or sets the PreROCInd field. </summary>
        public virtual System.String PreROCInd
        {
            get { return _preROCInd; }
            set { _preROCInd = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Master.RMCDRAutoFixTimeLine.MCaseType - Master.MCaseType.RMCDRAutoFixTimeLines (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<RMCDRAutoFixTimeLine> RMCDRAutoFixTimeLines
        {
            get { return _rMCDRAutoFixTimeLines; }
            set { _rMCDRAutoFixTimeLines = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Master.RMDocCodeHRGType.MCaseType - Master.MCaseType.RMDocCodeHRGTypes (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<RMDocCodeHRGType> RMDocCodeHRGTypes
        {
            get { return _rMDocCodeHRGTypes; }
            set { _rMDocCodeHRGTypes = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'SubCase.SubCaseInfo.MCaseType - Master.MCaseType.SubCaseInfos (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<SubCaseInfo> SubCaseInfos
        {
            get { return _subCaseInfos; }
            set { _subCaseInfos = value; }
        }

        /// <summary>Gets or sets the LABAccessInd field. </summary>
        public virtual System.String LABAccessInd
        {
            get { return _lABAccessInd; }
            set { _lABAccessInd = value; }
        }

        #endregion Properties

        #region Methods

        /// <summary>Determines whether the specified object is equal to this instance.</summary>
        /// <param name="obj">The <see cref="System.Object"/> to compare with this instance.</param>
        /// <returns><c>true</c> if the specified <see cref="System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        public override bool Equals(object obj)
        {
            if(obj == null)
            {
                return false;
            }
            MCaseType toCompareWith = obj as MCaseType;
            return toCompareWith == null ? false : ((this.CaseTypeCode == toCompareWith.CaseTypeCode));
        }

        /// <summary>Returns a hash code for this instance.</summary>
        /// <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        public override int GetHashCode()
        {
            int toReturn = base.GetHashCode();
            toReturn ^= this.CaseTypeCode.GetHashCode();
            return toReturn;
        }

        #endregion Methods
    }
}