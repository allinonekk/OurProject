#region Header

//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v3.0.</auto-generated>
//------------------------------------------------------------------------------

#endregion Header

namespace AllInOne.Legal.Domain.Master
{
    using System;

    using AllInOne.Legal.Domain.Abstract;
    using AllInOne.Legal.Domain.Interfaces;

    /// <summary>
    /// Represents a standard domain entity for MEMSCourtCommEntity.
    /// </summary>
    [Serializable]
    public class MEMSCourtCommEntity : AbstractMasterInfo, IMasterEntity
    {
        #region Constructors

        /// <summary>Initializes a new instance of the <see cref="MEMSCourtCommEntity"/> class.</summary>
        public MEMSCourtCommEntity()
            : base()
        {
        }

        #endregion Constructors

        #region Properties

        /// <summary>Gets or sets the EMSCourtCommCode field. </summary>
        public System.String EMSCourtCommCode
        {
            get;
            set;
        }

        /// <summary>Gets or sets the ExecDesc field. </summary>
        public System.String ExecDesc
        {
            get;
            set;
        }

        /// <summary>Gets or sets the FrequencyInd field. </summary>
        public Nullable<System.Int32> FrequencyInd
        {
            get;
            set;
        }

        /// <summary>Gets or sets the MinAmt field. </summary>
        public System.Decimal MinAmt
        {
            get;
            set;
        }

        /// <summary>Gets or sets the MultiplicandPercent field. </summary>
        public System.Decimal MultiplicandPercent
        {
            get;
            set;
        }

        /// <summary>Gets or sets the MultiplierDesc field. </summary>
        public System.String MultiplierDesc
        {
            get;
            set;
        }

        /// <summary>Gets or sets the Amount field. </summary>
        public System.Decimal Amount
        {
            get;
            set;
        }

        /// <summary>Gets or sets the AboveAmountPercent field. </summary>
        public Nullable<System.Decimal> AboveAmountPercent
        {
            get;
            set;
        }

        /// <summary>Gets or sets the EMStype field. </summary>
        public EMSType EMStype
        {
            get;
            set;
        }

        /// <summary>Gets or sets the AppCode field. </summary>
        public System.String AppCode
        {
            get;
            set;
        }

        /// <summary>Gets or sets the CourtId field. </summary>
        public System.String CourtId
        {
            get;
            set;
        }

        #endregion Properties

        #region Methods

        /// <summary>Determines whether the specified object is equal to this instance.</summary>
        /// <param name="obj">The <see cref="System.Object"/> to compare with this instance.</param>
        /// <returns><c>true</c> if the specified <see cref="System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        public override bool Equals(object obj)
        {
            if(obj == null)
            {
                return false;
            }
            MEMSCourtCommEntity toCompareWith = obj as MEMSCourtCommEntity;
            return toCompareWith == null ? false : ((this.EMSCourtCommCode == toCompareWith.EMSCourtCommCode));
        }

        /// <summary>Returns a hash code for this instance.</summary>
        /// <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        public override int GetHashCode()
        {
            int toReturn = base.GetHashCode();
            toReturn ^= this.EMSCourtCommCode.GetHashCode();
            return toReturn;
        }

        #endregion Methods
    }
}