namespace AllInOne.Legal.Domain.BackEndSpecific
{
    using System;
    using System.Collections.Generic;

    /// <summary>
    ///	Generated by MyGeneration using the NHibernate Object Mapping template
    /// </summary>
    [Serializable]
    public class VSecuredDocAccessInfoEntity
    {
        #region Properties

        /// <summary>
        /// Gets or sets the DocId field.
        /// </summary>
        public System.String DocId
        {
            get;
             			set;
        }

        /// <summary>
        /// Gets or sets the UserID field.
        /// </summary>
        public System.String UserID
        {
            get;
             			set;
        }

        #endregion Properties

        #region Methods

        /// <summary>Determines whether the specified object is equal to this instance.</summary>
        /// <param name="obj">The <see cref="System.Object"/> to compare with this instance.</param>
        /// <returns><c>true</c> if the specified <see cref="System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        public override bool Equals(object obj)
        {
            if (obj == null)
            {
                return false;
            }
            VSecuredDocAccessInfoEntity toCompareWith = obj as VSecuredDocAccessInfoEntity;
            return toCompareWith == null ? false : ((this.UserID == toCompareWith.UserID && this.DocId == toCompareWith.DocId ));
        }

        /// <summary>Returns a hash code for this instance.</summary>
        /// <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        public override int GetHashCode()
        {
            int toReturn = base.GetHashCode();
            toReturn ^= String.Concat(UserID, DocId).GetHashCode();
            return toReturn;
        }

        public override string ToString()
        {
            return 		"DocId=" + DocId + "--" +
            "UserID=" + UserID + "--" +
            "";
        }

        #endregion Methods
    }
}