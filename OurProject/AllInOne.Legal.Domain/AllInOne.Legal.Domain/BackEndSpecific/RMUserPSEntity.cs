namespace AllInOne.Legal.Domain.BackEndSpecific{
	using System;
	using System.Collections.Generic;
    using AllInOne.Legal.Domain.Interfaces;

	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping template
	/// </summary>
	[Serializable]
    public class RMUserPSEntity : IBackEndSpecificEntity
	{

		/// <summary>
		/// Gets or sets the PSUserId field.
		/// </summary>
		public System.String PSUserId
		{
			get; 
 			set; 
		}

		/// <summary>
		/// Gets or sets the JOUserId field.
		/// </summary>
		public System.String JOUserId
		{
			get; 
 			set; 
		}

		/// <summary>
		/// Gets or sets the ObsInd field.
		/// </summary>
		public System.String ObsInd
		{
			get; 
 			set; 
		}

		/// <summary>
		/// Gets or sets the LastModifiedBy field.
		/// </summary>
		public System.String LastModifiedBy
		{
			get; 
 			set; 
		}

		/// <summary>
		/// Gets or sets the LastModifiedDate field.
		/// </summary>
		public DateTime LastModifiedDate
		{
			get; 
 			set; 
		}
#region ToString, Equals And HashCode Overrides
		/// <summary>Determines whether the specified object is equal to this instance.</summary>
        /// <param name="obj">The <see cref="System.Object"/> to compare with this instance.</param>
        /// <returns><c>true</c> if the specified <see cref="System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        public override bool Equals(object obj)
        {
            if (obj == null)
            {
                return false;
            }
            RMUserPSEntity toCompareWith = obj as RMUserPSEntity;
            return toCompareWith == null ? false : ((this.JOUserId == toCompareWith.JOUserId && this.PSUserId == toCompareWith.PSUserId));
        }

        /// <summary>Returns a hash code for this instance.</summary>
        /// <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        public override int GetHashCode()
        {
            int toReturn = base.GetHashCode();
            toReturn ^= this.JOUserId.GetHashCode();
            toReturn ^= this.PSUserId.GetHashCode();
            return toReturn;
        }
		
		public override string ToString()
        {
			return 		"PSUserId=" + PSUserId + "--" + 
		"JOUserId=" + JOUserId + "--" + 
		"ObsInd=" + ObsInd + "--" + 
		"LastModifiedBy=" + LastModifiedBy + "--" + 
		"LastModifiedDate=" + LastModifiedDate + "--" + 
		"";
        }
		
		#endregion

	}
}
