#region Header

//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v3.0.</auto-generated>
//------------------------------------------------------------------------------

#endregion Header

namespace AllInOne.Legal.Entities.BackEnd
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;

    /// <summary>Class which represents the entity 'Document.DocCaseParty'</summary>
    public partial class DocCaseParty : IDocument
    {
        #region Fields

        private System.String _applicantCapacityRemarks;
        private System.String _birthCountryRemarks;

        //private CaseInfo _caseInfo;
        //private CaseParty _caseParty;
        private Nullable<System.Int64> _caseInfoId;
        private System.String _casePartyId;
        private System.Collections.Generic.ICollection<ChargeInfo> _chargeInfos;
        private System.String _companyName;
        private System.String _contactTypeInd;
        private Nullable<System.DateTime> _dateOfBirth;
        private Nullable<System.DateTime> _dateOfRegistration;
        private Nullable<System.DateTime> _dateofService;
        private System.String _dCPID;
        private System.String _dialectRemarks;
        private System.String _disablePersonInd;
        private System.String _disablePersonRemarks;
        private System.Collections.Generic.ICollection<DocCasePartyAddress> _docCasePartyAddresses;
        private System.Collections.Generic.ICollection<DocCasePartyAICAlias> _docCasePartyAICAliases;
        private System.Collections.Generic.ICollection<DocCasePartyAICDetail> _docCasePartyAICDetails;
        private System.Collections.Generic.ICollection<DocCasePartyAlias> _docCasePartyAliases;
        private System.Collections.Generic.ICollection<DocCasePartyAuthorisedOfficerDetail> _docCasePartyAuthorisedOfficerDetails;
        private System.Collections.Generic.ICollection<DocCasePartyBailorInfo> _docCasePartyBailorInfos;
        private System.Collections.Generic.ICollection<DocCasePartyCitizenship> _docCasePartyCitizenships;
        private System.Collections.Generic.ICollection<DocCasePartyCriminalInfo> _docCasePartyCriminalInfos;
        private System.Collections.Generic.ICollection<DocCasePartyLACDetail> _docCasePartyLACDetails;
        private System.Collections.Generic.ICollection<DocCaseSolicitor> _docCaseSolicitors;
        private System.String _email;
        private System.String _faxAreaCode;
        private System.String _faxCountryCode;
        private System.String _faxNumber;
        private System.String _filingInd;
        private System.String _formerCompanyName;
        private System.String _formerPersonName;
        private System.String _fullName;
        private System.String _hasLAC;
        private System.String _idNumber;
        private System.String _idRemarks;
        private System.String _involvementInd;
        private System.String _isPartyServiedWrit;
        private System.String _isSingaporePR;
        private System.String _languageCode;
        private System.String _languageRemarks;
        private System.String _lastModifiedBy;
        private System.DateTime _lastModifiedDate;

        //private LawFirmAddress _lawFirmAddress;
        private System.String _lFAddressId;
        private System.String _lFId;
        private MApplicantCapacity _mApplicantCapacity;
        private System.String _marriageCertNo;
        private Nullable<System.DateTime> _marriageDt;
        private MPartyType _mCasePartyTypeCode;
        private MCountry _mDCPBirthCountry;
        private MPersonIDType _mDCPCompanyIdType;
        private MCountry _mDCPCountryOfRegistration;
        private MCountry _mDCPIdCountry;
        private MCountry _mDCPMarriageCountry;
        private MPersonIDType _mDCPPersonIdType;
        private MDialect _mDialect;
        private MEntityType _mEntityType;
        private MGender _mGender;
        private MMaritalStatus _mMaritalStatus;
        private MNationality _mNationality;
        private System.String _mobileCountryCode;
        private System.String _mobileNumber;
        private MOccupation _mOccupation;
        private MPersonIDGroup _mPersonIDGroup;
        private MQualification _mQualification;
        private MRace _mRace;
        private MRelationship _mRelationship;
        private MReligion _mReligion;
        private MPartyType _mSubCasePartyTypeCode;
        private System.String _nationalityRemarks;
        private System.String _occupationRemarks;
        private Nullable<System.Decimal> _ordinalNumber;
        private System.Collections.Generic.ICollection<OSPDRelation> _oSPDRelations;
        private System.Collections.Generic.ICollection<PADeedRole> _pADeedRoles;
        private System.Collections.Generic.ICollection<PartyAmendment> _partyAmendments;
        private System.String _partyNo;
        private System.String _raceRemarks;
        private System.Collections.Generic.ICollection<RDocCaseParty> _rDocCaseParties;
        private System.String _refDCPID;
        private System.String _relationshipRemarks;
        private System.String _religionRemarks;

        //private SubCaseInfo _subCaseInfo;
        private Nullable<System.Decimal> _subCaseOrdinalNumber;
        private System.String _subCasePartyUpdateInd;
        private System.String _telAreaCode;
        private System.String _telCountryCode;
        private System.String _telNumber;
        private System.String _uEN;
        private System.String _updateInd;
        private System.String _vesselName;

        #endregion Fields

        #region Constructors

        /// <summary>Initializes a new instance of the <see cref="DocCaseParty"/> class.</summary>
        public DocCaseParty()
            : base()
        {
            _partyAmendments = new System.Collections.Generic.HashSet<PartyAmendment>();
            _chargeInfos = new System.Collections.Generic.HashSet<ChargeInfo>();
            _oSPDRelations = new System.Collections.Generic.HashSet<OSPDRelation>();
            _pADeedRoles = new System.Collections.Generic.HashSet<PADeedRole>();
            _docCasePartyAddresses = new System.Collections.Generic.HashSet<DocCasePartyAddress>();
            _docCasePartyAICAliases = new System.Collections.Generic.HashSet<DocCasePartyAICAlias>();
            _docCasePartyAICDetails = new System.Collections.Generic.HashSet<DocCasePartyAICDetail>();
            _docCasePartyAliases = new System.Collections.Generic.HashSet<DocCasePartyAlias>();
            _docCasePartyAuthorisedOfficerDetails = new System.Collections.Generic.HashSet<DocCasePartyAuthorisedOfficerDetail>();
            _docCasePartyBailorInfos = new System.Collections.Generic.HashSet<DocCasePartyBailorInfo>();
            _docCasePartyCitizenships = new System.Collections.Generic.HashSet<DocCasePartyCitizenship>();
            _docCasePartyCriminalInfos = new System.Collections.Generic.HashSet<DocCasePartyCriminalInfo>();
            _docCasePartyLACDetails = new System.Collections.Generic.HashSet<DocCasePartyLACDetail>();
            _docCaseSolicitors = new System.Collections.Generic.HashSet<DocCaseSolicitor>();
            _rDocCaseParties = new System.Collections.Generic.HashSet<RDocCaseParty>();
        }

        #endregion Constructors

        #region Properties

        /// <summary>Gets or sets the ApplicantCapacityRemarks field. </summary>
        public virtual System.String ApplicantCapacityRemarks
        {
            get { return _applicantCapacityRemarks; }
            set { _applicantCapacityRemarks = value; }
        }

        /// <summary>Gets or sets the BirthCountryRemarks field. </summary>
        public virtual System.String BirthCountryRemarks
        {
            get { return _birthCountryRemarks; }
            set { _birthCountryRemarks = value; }
        }

        /// <summary>Gets or sets the CapacityInd field. </summary>
        public virtual System.String CapacityInd
        {
            get;
            set;
        }

        /// <summary>Gets or sets the CapacityInfo field. </summary>
        public virtual String CapacityInfo
        {
            get;
            set;
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.CaseInfo - Case.CaseInfo.DocCaseParties (m:1)'</summary>
        //public virtual CaseInfo CaseInfo
        //{
        //    get { return _caseInfo; }
        //    set { _caseInfo = value; }
        //}
        ///// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.CaseParty - Case.CaseParty.DocCaseParties (m:1)'</summary>
        //public virtual CaseParty CaseParty
        //{
        //    get { return _caseParty; }
        //    set { _caseParty = value; }
        //}
        public virtual Nullable<System.Int64> CaseInfoId
        {
            get { return _caseInfoId; }
            set { _caseInfoId = value; }
        }

        /// <summary>Gets or sets the CasePartyId field. </summary>
        public virtual System.String CasePartyId
        {
            get { return _casePartyId; }
            set { _casePartyId = value; }
        }

        ///// <summary>Gets or sets the CasePartyEditInd field. </summary>
        //public virtual System.String CasePartyEditInd
        //{
        //    get { return _casePartyEditInd; }
        //    set { _casePartyEditInd = value; }
        //}
        /// <summary>Represents the navigator which is mapped onto the association 'CaseSpecific.ChargeInfo.DocCaseParty - Document.DocCaseParty.ChargeInfos (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<ChargeInfo> ChargeInfos
        {
            get { return _chargeInfos; }
            set { _chargeInfos = value; }
        }

        /// <summary>Gets or sets the CompanyName field. </summary>
        public virtual System.String CompanyName
        {
            get { return _companyName; }
            set { _companyName = value; }
        }

        /// <summary>Gets or sets the ContactTypeInd field. </summary>
        public virtual System.String ContactTypeInd
        {
            get { return _contactTypeInd; }
            set { _contactTypeInd = value; }
        }

        /// <summary>Gets or sets the DateOfBirth field. </summary>
        public virtual Nullable<System.DateTime> DateOfBirth
        {
            get { return _dateOfBirth; }
            set { _dateOfBirth = value; }
        }

        /// <summary>Gets or sets the DateOfRegistration field. </summary>
        public virtual Nullable<System.DateTime> DateOfRegistration
        {
            get { return _dateOfRegistration; }
            set { _dateOfRegistration = value; }
        }

        /// <summary>Gets or sets the DateofService field. </summary>
        public virtual Nullable<System.DateTime> DateofService
        {
            get { return _dateofService; }
            set { _dateofService = value; }
        }

        /// <summary>Gets or sets the DCPID field. </summary>
        public virtual System.String DCPID
        {
            get { return _dCPID; }
            set { _dCPID = value; }
        }

        /// <summary>Gets or sets the DialectRemarks field. </summary>
        public virtual System.String DialectRemarks
        {
            get { return _dialectRemarks; }
            set { _dialectRemarks = value; }
        }

        /// <summary>Gets or sets the DisablePersonInd field. </summary>
        public virtual System.String DisablePersonInd
        {
            get { return _disablePersonInd; }
            set { _disablePersonInd = value; }
        }

        /// <summary>Gets or sets the DisablePersonRemarks field. </summary>
        public virtual System.String DisablePersonRemarks
        {
            get { return _disablePersonRemarks; }
            set { _disablePersonRemarks = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCasePartyAddress.DocCaseParty - Document.DocCaseParty.DocCasePartyAddresses (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<DocCasePartyAddress> DocCasePartyAddresses
        {
            get { return _docCasePartyAddresses; }
            set { _docCasePartyAddresses = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCasePartyAICAlias.DocCaseParty - Document.DocCaseParty.DocCasePartyAICAliases (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<DocCasePartyAICAlias> DocCasePartyAICAliases
        {
            get { return _docCasePartyAICAliases; }
            set { _docCasePartyAICAliases = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCasePartyAICDetail.DocCaseParty - Document.DocCaseParty.DocCasePartyAICDetails (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<DocCasePartyAICDetail> DocCasePartyAICDetails
        {
            get { return _docCasePartyAICDetails; }
            set { _docCasePartyAICDetails = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCasePartyAlias.DocCaseParty - Document.DocCaseParty.DocCasePartyAliases (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<DocCasePartyAlias> DocCasePartyAliases
        {
            get { return _docCasePartyAliases; }
            set { _docCasePartyAliases = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCasePartyAuthorisedOfficerDetail.DocCaseParty - Document.DocCaseParty.DocCasePartyAuthorisedOfficerDetails (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<DocCasePartyAuthorisedOfficerDetail> DocCasePartyAuthorisedOfficerDetails
        {
            get { return _docCasePartyAuthorisedOfficerDetails; }
            set { _docCasePartyAuthorisedOfficerDetails = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCasePartyBailorInfo.DocCaseParty - Document.DocCaseParty.DocCasePartyBailorInfos (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<DocCasePartyBailorInfo> DocCasePartyBailorInfos
        {
            get { return _docCasePartyBailorInfos; }
            set { _docCasePartyBailorInfos = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCasePartyCitizenship.DocCaseParty - Document.DocCaseParty.DocCasePartyCitizenships (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<DocCasePartyCitizenship> DocCasePartyCitizenships
        {
            get { return _docCasePartyCitizenships; }
            set { _docCasePartyCitizenships = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCasePartyCriminalInfo.DocCaseParty - Document.DocCaseParty.DocCasePartyCriminalInfos (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<DocCasePartyCriminalInfo> DocCasePartyCriminalInfos
        {
            get { return _docCasePartyCriminalInfos; }
            set { _docCasePartyCriminalInfos = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCasePartyLACDetail.DocCaseParty - Document.DocCaseParty.DocCasePartyLACDetails (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<DocCasePartyLACDetail> DocCasePartyLACDetails
        {
            get { return _docCasePartyLACDetails; }
            set { _docCasePartyLACDetails = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseSolicitor.DocCaseParty - Document.DocCaseParty.DocCaseSolicitors (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<DocCaseSolicitor> DocCaseSolicitors
        {
            get { return _docCaseSolicitors; }
            set { _docCaseSolicitors = value; }
        }

        /// <summary>Gets or sets the Email field. </summary>
        public virtual System.String Email
        {
            get { return _email; }
            set { _email = value; }
        }

        /// <summary>Gets or sets the FaxAreaCode field. </summary>
        public virtual System.String FaxAreaCode
        {
            get { return _faxAreaCode; }
            set { _faxAreaCode = value; }
        }

        /// <summary>Gets or sets the FaxCountryCode field. </summary>
        public virtual System.String FaxCountryCode
        {
            get { return _faxCountryCode; }
            set { _faxCountryCode = value; }
        }

        /// <summary>Gets or sets the FaxNumber field. </summary>
        public virtual System.String FaxNumber
        {
            get { return _faxNumber; }
            set { _faxNumber = value; }
        }

        /// <summary>Gets or sets the FilingInd field. </summary>
        public virtual System.String FilingInd
        {
            get { return _filingInd; }
            set { _filingInd = value; }
        }

        /// <summary>Gets or sets the FormerCompanyName field. </summary>
        public virtual System.String FormerCompanyName
        {
            get { return _formerCompanyName; }
            set { _formerCompanyName = value; }
        }

        /// <summary>Gets or sets the FormerPersonName field. </summary>
        public virtual System.String FormerPersonName
        {
            get { return _formerPersonName; }
            set { _formerPersonName = value; }
        }

        /// <summary>Gets or sets the FullName field. </summary>
        public virtual System.String FullName
        {
            get { return _fullName; }
            set { _fullName = value; }
        }

        /// <summary>Gets or sets the HasLAC field. </summary>
        public virtual System.String HasLAC
        {
            get { return _hasLAC; }
            set { _hasLAC = value; }
        }

        /// <summary>Gets or sets the IdNumber field. </summary>
        public virtual System.String IdNumber
        {
            get { return _idNumber; }
            set { _idNumber = value; }
        }

        /// <summary>Gets or sets the IdRemarks field. </summary>
        public virtual System.String IdRemarks
        {
            get { return _idRemarks; }
            set { _idRemarks = value; }
        }

        /// <summary>Gets or sets the InvolvementInd field. </summary>
        public virtual System.String InvolvementInd
        {
            get { return _involvementInd; }
            set { _involvementInd = value; }
        }

        /// <summary>Gets or sets the IsPartyServiedWrit field. </summary>
        public virtual System.String IsPartyServiedWrit
        {
            get { return _isPartyServiedWrit; }
            set { _isPartyServiedWrit = value; }
        }

        /// <summary>Gets or sets the IsSingaporePR field. </summary>
        public virtual System.String IsSingaporePR
        {
            get { return _isSingaporePR; }
            set { _isSingaporePR = value; }
        }

        /// <summary>Gets or sets the LanguageCode field. </summary>
        public virtual System.String LanguageCode
        {
            get { return _languageCode; }
            set { _languageCode = value; }
        }

        /// <summary>Gets or sets the LanguageRemarks field. </summary>
        public virtual System.String LanguageRemarks
        {
            get { return _languageRemarks; }
            set { _languageRemarks = value; }
        }

        /// <summary>Gets or sets the LastModifiedBy field. </summary>
        public virtual System.String LastModifiedBy
        {
            get { return _lastModifiedBy; }
            set { _lastModifiedBy = value; }
        }

        /// <summary>Gets or sets the LastModifiedDate field. </summary>
        public virtual System.DateTime LastModifiedDate
        {
            get { return _lastModifiedDate; }
            set { _lastModifiedDate = value; }
        }

        ///// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.LawFirmAddress - LawFirm.LawFirmAddress.DocCaseParties (m:1)'</summary>
        //public virtual LawFirmAddress LawFirmAddress
        //{
        //    get { return _lawFirmAddress; }
        //    set { _lawFirmAddress = value; }
        //}
        /// <summary>Gets or sets the LFAddressId field. </summary>
        public virtual System.String LFAddressId
        {
            get { return _lFAddressId; }
            set { _lFAddressId = value; }
        }

        /// <summary>Gets or sets the LFId field. </summary>
        public virtual System.String LFId
        {
            get { return _lFId; }
            set { _lFId = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MApplicantCapacity - Master.MApplicantCapacity.DocCaseParties (m:1)'</summary>
        public virtual MApplicantCapacity MApplicantCapacity
        {
            get { return _mApplicantCapacity; }
            set { _mApplicantCapacity = value; }
        }

        /// <summary>Gets or sets the MarriageCertNo field. </summary>
        public virtual System.String MarriageCertNo
        {
            get { return _marriageCertNo; }
            set { _marriageCertNo = value; }
        }

        /// <summary>Gets or sets the MarriageDt field. </summary>
        public virtual Nullable<System.DateTime> MarriageDt
        {
            get { return _marriageDt; }
            set { _marriageDt = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MCasePartyTypeCode - Master.MPartyType.MCasePartyTypeCode (m:1)'</summary>
        public virtual MPartyType MCasePartyTypeCode
        {
            get { return _mCasePartyTypeCode; }
            set { _mCasePartyTypeCode = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MDCPBirthCountry - Master.MCountry.MDCPBirthCountry (m:1)'</summary>
        public virtual MCountry MDCPBirthCountry
        {
            get { return _mDCPBirthCountry; }
            set { _mDCPBirthCountry = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MDCPCompanyIdType - Master.MPersonIDType.MDCPCompanyIdType (m:1)'</summary>
        public virtual MPersonIDType MDCPCompanyIdType
        {
            get { return _mDCPCompanyIdType; }
            set { _mDCPCompanyIdType = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MDCPCountryOfRegistration - Master.MCountry.MDCPCountryOfRegistration (m:1)'</summary>
        public virtual MCountry MDCPCountryOfRegistration
        {
            get { return _mDCPCountryOfRegistration; }
            set { _mDCPCountryOfRegistration = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MDCPIdCountry - Master.MCountry.MDCPIdCountry (m:1)'</summary>
        public virtual MCountry MDCPIdCountry
        {
            get { return _mDCPIdCountry; }
            set { _mDCPIdCountry = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MDCPMarriageCountry - Master.MCountry.MDCPMarriageCountry (m:1)'</summary>
        public virtual MCountry MDCPMarriageCountry
        {
            get { return _mDCPMarriageCountry; }
            set { _mDCPMarriageCountry = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MDCPPersonIdType - Master.MPersonIDType.MDCPPersonIdType (m:1)'</summary>
        public virtual MPersonIDType MDCPPersonIdType
        {
            get { return _mDCPPersonIdType; }
            set { _mDCPPersonIdType = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MDialect - Master.MDialect.DocCaseParties (m:1)'</summary>
        public virtual MDialect MDialect
        {
            get { return _mDialect; }
            set { _mDialect = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MEntityType - Master.MEntityType.DocCaseParties (m:1)'</summary>
        public virtual MEntityType MEntityType
        {
            get { return _mEntityType; }
            set { _mEntityType = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MGender - Master.MGender.DocCaseParties (m:1)'</summary>
        public virtual MGender MGender
        {
            get { return _mGender; }
            set { _mGender = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MMaritalStatus - Master.MMaritalStatus.DocCaseParties (m:1)'</summary>
        public virtual MMaritalStatus MMaritalStatus
        {
            get { return _mMaritalStatus; }
            set { _mMaritalStatus = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MNationality - Master.MNationality.DocCaseParties (m:1)'</summary>
        public virtual MNationality MNationality
        {
            get { return _mNationality; }
            set { _mNationality = value; }
        }

        /// <summary>Gets or sets the MobileCountryCode field. </summary>
        public virtual System.String MobileCountryCode
        {
            get { return _mobileCountryCode; }
            set { _mobileCountryCode = value; }
        }

        /// <summary>Gets or sets the MobileNumber field. </summary>
        public virtual System.String MobileNumber
        {
            get { return _mobileNumber; }
            set { _mobileNumber = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MOccupation - Master.MOccupation.DocCaseParties (m:1)'</summary>
        public virtual MOccupation MOccupation
        {
            get { return _mOccupation; }
            set { _mOccupation = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MPersonIDGroup - Master.MPersonIDGroup.DocCaseParties (m:1)'</summary>
        public virtual MPersonIDGroup MPersonIDGroup
        {
            get { return _mPersonIDGroup; }
            set { _mPersonIDGroup = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MQualification - Master.MQualification.DocCaseParties (m:1)'</summary>
        public virtual MQualification MQualification
        {
            get { return _mQualification; }
            set { _mQualification = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MRace - Master.MRace.DocCaseParties (m:1)'</summary>
        public virtual MRace MRace
        {
            get { return _mRace; }
            set { _mRace = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MRelationship - Master.MRelationship.DocCaseParties (m:1)'</summary>
        public virtual MRelationship MRelationship
        {
            get { return _mRelationship; }
            set { _mRelationship = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MReligion - Master.MReligion.DocCaseParties (m:1)'</summary>
        public virtual MReligion MReligion
        {
            get { return _mReligion; }
            set { _mReligion = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MSubCasePartyTypeCode - Master.MPartyType.MSubCasePartyTypeCode (m:1)'</summary>
        public virtual MPartyType MSubCasePartyTypeCode
        {
            get { return _mSubCasePartyTypeCode; }
            set { _mSubCasePartyTypeCode = value; }
        }

        /// <summary>Gets or sets the NationalityRemarks field. </summary>
        public virtual System.String NationalityRemarks
        {
            get { return _nationalityRemarks; }
            set { _nationalityRemarks = value; }
        }

        /// <summary>Gets or sets the OccupationRemarks field. </summary>
        public virtual System.String OccupationRemarks
        {
            get { return _occupationRemarks; }
            set { _occupationRemarks = value; }
        }

        /// <summary>Gets or sets the OrdinalNumber field. </summary>
        public virtual Nullable<System.Decimal> OrdinalNumber
        {
            get { return _ordinalNumber; }
            set { _ordinalNumber = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'CaseSpecific.OSPDRelation.DocCaseParty - Document.DocCaseParty.OSPDRelations (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<OSPDRelation> OSPDRelations
        {
            get { return _oSPDRelations; }
            set { _oSPDRelations = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Common.PADeedRole.DocCaseParty - Document.DocCaseParty.PADeedRoles (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<PADeedRole> PADeedRoles
        {
            get;
            set;
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Case.PartyAmendment.DocCaseParty - Document.DocCaseParty.PartyAmendments (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<PartyAmendment> PartyAmendments
        {
            get { return _partyAmendments; }
            set { _partyAmendments = value; }
        }

        /// <summary>Gets or sets the PartyNo field. </summary>
        public virtual System.String PartyNo
        {
            get { return _partyNo; }
            set { _partyNo = value; }
        }

        /// <summary>Gets or sets the RaceRemarks field. </summary>
        public virtual System.String RaceRemarks
        {
            get { return _raceRemarks; }
            set { _raceRemarks = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.RDocCaseParty.DocCaseParty - Document.DocCaseParty.RDocCaseParties (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<RDocCaseParty> RDocCaseParties
        {
            get { return _rDocCaseParties; }
            set { _rDocCaseParties = value; }
        }

        /// <summary>Gets or sets the RefDCPID field. </summary>
        public virtual System.String RefDCPID
        {
            get { return _refDCPID; }
            set { _refDCPID = value; }
        }

        /// <summary>Gets or sets the RelationshipRemarks field. </summary>
        public virtual System.String RelationshipRemarks
        {
            get { return _relationshipRemarks; }
            set { _relationshipRemarks = value; }
        }

        /// <summary>Gets or sets the ReligionRemarks field. </summary>
        public virtual System.String ReligionRemarks
        {
            get { return _religionRemarks; }
            set { _religionRemarks = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.SubCaseInfo - SubCase.SubCaseInfo.DocCaseParties (m:1)'</summary>
        //public virtual SubCaseInfo SubCaseInfo
        //{
        //    get { return _subCaseInfo; }
        //    set { _subCaseInfo = value; }
        //}
        public virtual Nullable<System.Int64> SubCaseInfoId
        {
            get;
            set;
        }

        /// <summary>Gets or sets the SubCaseOrdinalNumber field. </summary>
        public virtual Nullable<System.Decimal> SubCaseOrdinalNumber
        {
            get { return _subCaseOrdinalNumber; }
            set { _subCaseOrdinalNumber = value; }
        }

        /// <summary>Gets or sets the SubCasePartyUpdateInd field. </summary>
        public virtual System.String SubCasePartyUpdateInd
        {
            get { return _subCasePartyUpdateInd; }
            set { _subCasePartyUpdateInd = value; }
        }

        /// <summary>Gets or sets the TelAreaCode field. </summary>
        public virtual System.String TelAreaCode
        {
            get { return _telAreaCode; }
            set { _telAreaCode = value; }
        }

        /// <summary>Gets or sets the TelCountryCode field. </summary>
        public virtual System.String TelCountryCode
        {
            get { return _telCountryCode; }
            set { _telCountryCode = value; }
        }

        /// <summary>Gets or sets the TelNumber field. </summary>
        public virtual System.String TelNumber
        {
            get { return _telNumber; }
            set { _telNumber = value; }
        }

        /// <summary>Gets or sets the UEN field. </summary>
        public virtual System.String UEN
        {
            get { return _uEN; }
            set { _uEN = value; }
        }

        /// <summary>Gets or sets the UpdateInd field. </summary>
        public virtual System.String UpdateInd
        {
            get { return _updateInd; }
            set { _updateInd = value; }
        }

        /// <summary>Gets or sets the VesselName field. </summary>
        public virtual System.String VesselName
        {
            get { return _vesselName; }
            set { _vesselName = value; }
        }

        public virtual String VesselIDType
        {
            get;
            set;
        }

        public virtual String IMONumber
        {
            get;
            set;
        }

        /// <summary>Gets or sets the VesselName field. </summary>
        public virtual System.String RoleCode
        {
            get;
            set;
        }

        /// <summary>Gets or sets the IsSubCaseOnlyParty field. </summary>
        public virtual System.String IsSubCaseOnlyParty
        {
            get;
            set;
        }


        public virtual string PortOfRegistration
        {
            get;
            set;
        }

        public virtual string RegistrationNumber
        {
            get;
            set;
        }

        public virtual string ObsInd
        {
            get;
            set;
        }

        public virtual decimal CounterClaimOrdinalNumber { get; set; }

        public virtual MPartyType CounterClaimPartyTypeCode { get; set; }

        public virtual string CounterClaimPartyNo { get; set; }

        public virtual string IncomeCode { get; set; }

        public virtual string IncomeRemarks { get; set; }

        public virtual string ResidentStatusRemarks { get; set; }

        public virtual string ResidentStatusCode { get; set; }

        public virtual string HarassPlaceCode { get; set; }
        public virtual string HarassPlaceRemarks { get; set; }

        #endregion Properties

        #region Methods

        /// <summary>Determines whether the specified object is equal to this instance.</summary>
        /// <param name="obj">The <see cref="System.Object"/> to compare with this instance.</param>
        /// <returns><c>true</c> if the specified <see cref="System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        public override bool Equals(object obj)
        {
            if (obj == null)
            {
                return false;
            }
            DocCaseParty toCompareWith = obj as DocCaseParty;
            return toCompareWith == null ? false : ((this.DCPID == toCompareWith.DCPID));
        }

        /// <summary>Returns a hash code for this instance.</summary>
        /// <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        public override int GetHashCode()
        {
            int toReturn = base.GetHashCode();
            toReturn ^= this.DCPID.GetHashCode();
            return toReturn;
        }

        #endregion Methods
    }
}