#region Header

//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v3.0.</auto-generated>
//------------------------------------------------------------------------------

#endregion Header

namespace AllInOne.Legal.Entities.BackEnd
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;

    /// <summary>Class which represents the entity 'BackEndSpecific.InterfaceICA'</summary>
    public partial class InterfaceICA
    {
        #region Fields

        private System.String _caseNo;
        private Nullable<System.DateTime> _dateOfOrder;
        private System.String _docId;
        private System.String _iCAInterfaceId;
        private System.String _lastModifiedBy;
        private System.DateTime _lastModifiedDate;
        private System.Int32 _noOfTry;
        private System.String _orderNo;
        private System.String _status;

        #endregion Fields

        #region Constructors

        /// <summary>Initializes a new instance of the <see cref="InterfaceICA"/> class.</summary>
        public InterfaceICA()
            : base()
        {
        }

        #endregion Constructors

        #region Properties

        /// <summary>Gets or sets the CaseNo field. </summary>
        public virtual System.String CaseNo
        {
            get { return _caseNo; }
            set { _caseNo = value; }
        }

        /// <summary>Gets or sets the DateOfOrder field. </summary>
        public virtual Nullable<System.DateTime> DateOfOrder
        {
            get { return _dateOfOrder; }
            set { _dateOfOrder = value; }
        }

        /// <summary>Gets or sets the DocId field. </summary>
        public virtual System.String DocId
        {
            get { return _docId; }
            set { _docId = value; }
        }

        /// <summary>Gets or sets the ICAInterfaceId field. </summary>
        public virtual System.String ICAInterfaceId
        {
            get { return _iCAInterfaceId; }
            set { _iCAInterfaceId = value; }
        }

        /// <summary>Gets or sets the LastModifiedBy field. </summary>
        public virtual System.String LastModifiedBy
        {
            get { return _lastModifiedBy; }
            set { _lastModifiedBy = value; }
        }

        /// <summary>Gets or sets the LastModifiedDate field. </summary>
        public virtual System.DateTime LastModifiedDate
        {
            get { return _lastModifiedDate; }
            set { _lastModifiedDate = value; }
        }

        /// <summary>Gets or sets the NoOfTry field. </summary>
        public virtual System.Int32 NoOfTry
        {
            get { return _noOfTry; }
            set { _noOfTry = value; }
        }

        /// <summary>Gets or sets the OrderNo field. </summary>
        public virtual System.String OrderNo
        {
            get { return _orderNo; }
            set { _orderNo = value; }
        }

        /// <summary>Gets or sets the Status field. </summary>
        public virtual System.String Status
        {
            get { return _status; }
            set { _status = value; }
        }

        #endregion Properties

        #region Methods

        /// <summary>Determines whether the specified object is equal to this instance.</summary>
        /// <param name="obj">The <see cref="System.Object"/> to compare with this instance.</param>
        /// <returns><c>true</c> if the specified <see cref="System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        public override bool Equals(object obj)
        {
            if(obj == null)
            {
                return false;
            }
            InterfaceICA toCompareWith = obj as InterfaceICA;
            return toCompareWith == null ? false : ((this.ICAInterfaceId == toCompareWith.ICAInterfaceId));
        }

        /// <summary>Returns a hash code for this instance.</summary>
        /// <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        public override int GetHashCode()
        {
            int toReturn = base.GetHashCode();
            toReturn ^= this.ICAInterfaceId.GetHashCode();
            return toReturn;
        }

        #endregion Methods
    }
}