namespace AllInOne.Legal.Entities.BackEnd
{
	using System;
	using System.Collections.Generic;
	using System.ComponentModel;
	using AllInOne.Legal.Entities.BackEnd;

	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping template
	/// </summary>
	public class AuditModuleVisit : IAudit
	{

		#region Private Members

		private System.String m_auditmodulevisitid; 
		private System.String m_userid; 
		private System.String m_module; 
		private System.String m_actiontype; 
		private System.String m_description; 
		private DateTime m_createddatetime; 
		private System.String m_alertuserid; 
		private System.String m_alertdescription; 
		private System.String m_lastmodifiedby; 
		private DateTime m_lastmodifieddate; 		

		#endregion

		public AuditModuleVisit() : base() {}


		#region Public Properties
				
		public virtual System.String AuditModuleVisitId
		{
			get { return m_auditmodulevisitid; }
			set
			{
				if( value == null )
					throw new ArgumentOutOfRangeException("Null value not allowed for AuditModuleVisitId", value, "null");

				m_auditmodulevisitid = value;
			}

		}
				
		public virtual System.String UserId
		{
			get { return m_userid; }
			set
			{
				if( value == null )
					throw new ArgumentOutOfRangeException("Null value not allowed for UserId", value, "null");

				m_userid = value;
			}

		}
				
		public virtual System.String Module
		{
			get { return m_module; }
			set
			{
				if( value == null )
					throw new ArgumentOutOfRangeException("Null value not allowed for Module", value, "null");

				m_module = value;
			}

		}
				
		public virtual System.String ActionType
		{
			get { return m_actiontype; }
			set
			{
				if( value == null )
					throw new ArgumentOutOfRangeException("Null value not allowed for ActionType", value, "null");

				m_actiontype = value;
			}

		}
				
		public virtual System.String Description
		{
			get { return m_description; }
			set
			{
				if( value == null )
					throw new ArgumentOutOfRangeException("Null value not allowed for Description", value, "null");

				m_description = value;
			}

		}
				
		public virtual DateTime CreatedDateTime
		{
			get { return m_createddatetime; }
			set
			{
				m_createddatetime = value;
			}

		}
				
		public virtual System.String AlertUserId
		{
			get { return m_alertuserid; }
			set
			{
				m_alertuserid = value;
			}

		}
				
		public virtual System.String AlertDescription
		{
			get { return m_alertdescription; }
			set
			{
				m_alertdescription = value;
			}

		}
				
		public virtual System.String LastModifiedBy
		{
			get { return m_lastmodifiedby; }
			set
			{
				if( value == null )
					throw new ArgumentOutOfRangeException("Null value not allowed for LastModifiedBy", value, "null");

				m_lastmodifiedby = value;
			}

		}
				
		public virtual DateTime LastModifiedDate
		{
			get { return m_lastmodifieddate; }
			set
			{
				m_lastmodifieddate = value;
			}

		}
			
				
		#endregion 
#region ToString, Equals And HashCode Overrides
		/// <summary>Determines whether the specified object is equal to this instance.</summary>
        /// <param name="obj">The <see cref="System.Object"/> to compare with this instance.</param>
        /// <returns><c>true</c> if the specified <see cref="System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        public override bool Equals(object obj)
        {
            if (obj == null)
            {
                return false;
            }
            AuditModuleVisit toCompareWith = obj as AuditModuleVisit;
			return toCompareWith == null ? false : ((this.AuditModuleVisitId == toCompareWith.AuditModuleVisitId));
        }

        /// <summary>Returns a hash code for this instance.</summary>
        /// <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        public override int GetHashCode()
        {
            int toReturn = base.GetHashCode();
            toReturn ^= this.AuditModuleVisitId.GetHashCode();
            return toReturn;
        }
		
		public override string ToString()
        {
			return 		"AuditModuleVisitId=" + AuditModuleVisitId + "--" + 
		"UserId=" + UserId + "--" + 
		"Module=" + Module + "--" + 
		"ActionType=" + ActionType + "--" + 
		"Description=" + Description + "--" + 
		"CreatedDateTime=" + CreatedDateTime + "--" + 
		"AlertUserId=" + AlertUserId + "--" + 
		"AlertDescription=" + AlertDescription + "--" + 
		"LastModifiedBy=" + LastModifiedBy + "--" + 
		"LastModifiedDate=" + LastModifiedDate + "--" + 
		"";
        }
		
		#endregion

	}
}
