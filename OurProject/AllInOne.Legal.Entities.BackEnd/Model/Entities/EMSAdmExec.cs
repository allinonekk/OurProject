#region Header

//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v3.0.</auto-generated>
//------------------------------------------------------------------------------

#endregion Header

namespace AllInOne.Legal.Entities.BackEnd
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;

    /// <summary>Class which represents the entity 'Enforcement.EMSAdmExec'</summary>
    public partial class EMSAdmExec : IEnforcement
    {
        #region Fields

        private System.String _addr1;
        private System.String _addr2;
        private System.String _addr3;
        private System.String _addr4;
        private System.String _address;
        private System.String _agentContact;
        private System.String _agentName;
        private System.DateTime _arrestDateTime;
        private JudicialUser _bailiff;
        private Nullable<System.Decimal> _depositAmt;
        private Nullable<System.Decimal> _attendanceFee;
        private EMSAccount _eMSAccount;
        private System.Collections.Generic.ICollection<EMSAdmClaim> _eMSAdmClaims;
        private System.String _eMSAdmExecId;
        private EMSAdmProperty _eMSAdmProperty;
        private MEMSADMExecLocation _mEMSADMExecLocation;
        private System.String _execAddrBlkNo;
        private System.String _execAddrBuildingName;
        private System.String _execAddrFloorNo;
        private System.String _execAddrPostalCode;
        private System.String _execAddrStreetName;
        private System.String _execAddrUnitNo;
        private System.String _execOutcome;
        private System.String _execOutcomeDesc;
        private System.String _formatInd;
        private System.String _lastModifiedBy;
        private System.DateTime _lastModifiedDate;
        private System.String _obsInd;
        private System.String _remarks;

        #endregion Fields

        #region Constructors

        /// <summary>Initializes a new instance of the <see cref="EMSAdmExec"/> class.</summary>
        public EMSAdmExec()
            : base()
        {
            _eMSAdmClaims = new System.Collections.Generic.HashSet<EMSAdmClaim>();
        }

        #endregion Constructors

        #region Properties

        /// <summary>Gets or sets the Addr1 1field. </summary>
        public virtual System.String Addr1
        {
            get { return _addr1; }
            set { _addr1 = value; }
        }

        /// <summary>Gets or sets the Addr2 field. </summary>
        public virtual System.String Addr2
        {
            get { return _addr2; }
            set { _addr2 = value; }
        }

        /// <summary>Gets or sets the Addr3 field. </summary>
        public virtual System.String Addr3
        {
            get { return _addr3; }
            set { _addr3 = value; }
        }

        /// <summary>Gets or sets the Addr4 field. </summary>
        public virtual System.String Addr4
        {
            get { return _addr4; }
            set { _addr4 = value; }
        }

        /// <summary>Gets or sets the Address 1field. </summary>
        public virtual System.String Address
        {
            get { return _address; }
            set { _address = value; }
        }

        /// <summary>Gets or sets the AgentContact field. </summary>
        public virtual System.String AgentContact
        {
            get { return _agentContact; }
            set { _agentContact = value; }
        }

        /// <summary>Gets or sets the AgentName field. </summary>
        public virtual System.String AgentName
        {
            get { return _agentName; }
            set { _agentName = value; }
        }

        /// <summary>Gets or sets the ArrestDateTime field. </summary>
        public virtual System.DateTime ArrestDateTime
        {
            get { return _arrestDateTime; }
            set { _arrestDateTime = value; }
        }

        ///// <summary>Represents the navigator which is mapped onto the association 'Enforcement.EMSAdmExec.MEMSADMExecLocation (m:1)'</summary>
        public virtual MEMSADMExecLocation MEMSADMExecLocation
        {
            get { return _mEMSADMExecLocation; }
            set { _mEMSADMExecLocation = value; }
        }

        ///// <summary>Represents the navigator which is mapped onto the association 'Enforcement.EMSAdmExec.JudicialUser (m:1)'</summary>
        public virtual JudicialUser Bailiff
        {
            get { return _bailiff; }
            set { _bailiff = value; }
        }

        /// <summary>Gets or sets the DepositAmt field. </summary>
        public virtual Nullable<System.Decimal> DepositAmt
        {
            get { return _depositAmt; }
            set { _depositAmt = value; }
        }

        /// <summary>Gets or sets the AttendanceFee field. </summary>
        public virtual Nullable<System.Decimal> AttendanceFee
        {
            get { return _attendanceFee; }
            set { _attendanceFee = value; }
        }

        ///// <summary>Represents the navigator which is mapped onto the association 'Enforcement.EMSAdmExec.EMSAccount - Enforcement.EMSAccount.EMSAdmExecs (m:1)'</summary>
        public virtual EMSAccount EMSAccount
        {
            get { return _eMSAccount; }
            set { _eMSAccount = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Enforcement.EMSAdmClaim.EMSAdmExec - Enforcement.EMSAdmExec.EMSAdmClaims (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<EMSAdmClaim> EMSAdmClaims
        {
            get { return _eMSAdmClaims; }
            set { _eMSAdmClaims = value; }
        }

        /// <summary>Gets or sets the EMSAdmExecId field. </summary>
        public virtual System.String EMSAdmExecId
        {
            get { return _eMSAdmExecId; }
            set { _eMSAdmExecId = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Enforcement.EMSAdmExec.EMSAdmProperty - Enforcement.EMSAdmProperty.EMSAdmExecs (m:1)'</summary>
        public virtual EMSAdmProperty EMSAdmProperty
        {
            get { return _eMSAdmProperty; }
            set { _eMSAdmProperty = value; }
        }

        /// <summary>Gets or sets the ExecAddrBlkNo field. </summary>
        public virtual System.String ExecAddrBlkNo
        {
            get { return _execAddrBlkNo; }
            set { _execAddrBlkNo = value; }
        }

        /// <summary>Gets or sets the ExecAddrBuildingName field. </summary>
        public virtual System.String ExecAddrBuildingName
        {
            get { return _execAddrBuildingName; }
            set { _execAddrBuildingName = value; }
        }

        /// <summary>Gets or sets the ExecAddrFloorNo field. </summary>
        public virtual System.String ExecAddrFloorNo
        {
            get { return _execAddrFloorNo; }
            set { _execAddrFloorNo = value; }
        }

        /// <summary>Gets or sets the ExecAddrPostalCode field. </summary>
        public virtual System.String ExecAddrPostalCode
        {
            get { return _execAddrPostalCode; }
            set { _execAddrPostalCode = value; }
        }

        /// <summary>Gets or sets the ExecAddrStreetName field. </summary>
        public virtual System.String ExecAddrStreetName
        {
            get { return _execAddrStreetName; }
            set { _execAddrStreetName = value; }
        }

        /// <summary>Gets or sets the ExecAddrUnitNo field. </summary>
        public virtual System.String ExecAddrUnitNo
        {
            get { return _execAddrUnitNo; }
            set { _execAddrUnitNo = value; }
        }

        /// <summary>Gets or sets the ExecOutcome field. </summary>
        public virtual System.String ExecOutcome
        {
            get { return _execOutcome; }
            set { _execOutcome = value; }
        }

        /// <summary>Gets or sets the ExecOutcomeDesc field. </summary>
        public virtual System.String ExecOutcomeDesc
        {
            get { return _execOutcomeDesc; }
            set { _execOutcomeDesc = value; }
        }

        /// <summary>Gets or sets the _formatInd 1field. </summary>
        public virtual System.String FormatInd
        {
            get { return _formatInd; }
            set { _formatInd = value; }
        }

        /// <summary>Gets or sets the LastModifiedBy field. </summary>
        public virtual System.String LastModifiedBy
        {
            get { return _lastModifiedBy; }
            set { _lastModifiedBy = value; }
        }

        /// <summary>Gets or sets the LastModifiedDate field. </summary>
        public virtual System.DateTime LastModifiedDate
        {
            get { return _lastModifiedDate; }
            set { _lastModifiedDate = value; }
        }

        /// <summary>Gets or sets the ObsInd field. </summary>
        public virtual System.String ObsInd
        {
            get { return _obsInd; }
            set { _obsInd = value; }
        }

        /// <summary>Gets or sets the Remarks field. </summary>
        public virtual System.String Remarks
        {
            get { return _remarks; }
            set { _remarks = value; }
        }

        /// <summary>Gets or sets the Remarks field. </summary>
        public virtual MEMSSecurityGuard MEMSSecurityGuard
        {
            get;
            set;
        }

        public virtual string SyncRequired
        {
            get;
            set;
        }

        #endregion Properties

        #region Methods

        /// <summary>Determines whether the specified object is equal to this instance.</summary>
        /// <param name="obj">The <see cref="System.Object"/> to compare with this instance.</param>
        /// <returns><c>true</c> if the specified <see cref="System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        public override bool Equals(object obj)
        {
            if(obj == null)
            {
                return false;
            }
            EMSAdmExec toCompareWith = obj as EMSAdmExec;
            return toCompareWith == null ? false : ((this.EMSAdmExecId == toCompareWith.EMSAdmExecId));
        }

        /// <summary>Returns a hash code for this instance.</summary>
        /// <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        public override int GetHashCode()
        {
            int toReturn = base.GetHashCode();
            toReturn ^= this.EMSAdmExecId.GetHashCode();
            return toReturn;
        }

        #endregion Methods
    }
}