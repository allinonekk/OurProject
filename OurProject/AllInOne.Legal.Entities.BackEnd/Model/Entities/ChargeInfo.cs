#region Header

//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v3.0.</auto-generated>
//------------------------------------------------------------------------------

#endregion Header

namespace AllInOne.Legal.Entities.BackEnd
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;

    /// <summary>Class which represents the entity 'CaseSpecific.ChargeInfo'</summary>
    public partial class ChargeInfo : ICaseSpecific
    {
        #region Fields

        private System.String _capitalChargeInd;

        //private CaseParty _caseParty;
        private System.String _casePartyId;
        private System.String _chargeDescription;
        private System.String _chargeInfoId;
        private Nullable<System.Decimal> _chargeNumber;
        private Nullable<System.Decimal> _chargeSerialNumber;
        private System.String _chargeStatus;

        //private Hearing _hearing;
        private Nullable<System.Int64> _chargeStatusHrgId;
        private Nullable<System.Decimal> _chargeYear;
        private System.String _coronerNoticeInd;

        //private DocCaseParty _docCaseParty;
        private System.String _dcpId;
        private System.Collections.Generic.ICollection<DrugInfo> _drugInfos;
        private Nullable<System.Int32> _itemNo;
        private System.String _lastModifiedBy;
        private System.DateTime _lastModifiedDate;
        private System.String _mainChargeInd;
        private MChargeType _mChargeType;
        private System.Collections.Generic.ICollection<OffenceInfo> _offenceInfos;
        private System.String _pIChargeInd;
        private System.Collections.Generic.ICollection<RCriminalLegislationInfo> _rCriminalLegislationInfos;
        private System.String _relatedPICChargeNumber;
        private System.Collections.Generic.ICollection<SentenceInfo> _sentenceInfos;
        private System.String _submissionGroupId;

        #endregion Fields

        #region Constructors

        /// <summary>Initializes a new instance of the <see cref="ChargeInfo"/> class.</summary>
        public ChargeInfo()
            : base()
        {
            _drugInfos = new System.Collections.Generic.HashSet<DrugInfo>();
            _offenceInfos = new System.Collections.Generic.HashSet<OffenceInfo>();
            _rCriminalLegislationInfos = new System.Collections.Generic.HashSet<RCriminalLegislationInfo>();
            _sentenceInfos = new System.Collections.Generic.HashSet<SentenceInfo>();
        }

        #endregion Constructors

        #region Properties

        /// <summary>Gets or sets the CapitalChargeInd field. </summary>
        public virtual System.String CapitalChargeInd
        {
            get { return _capitalChargeInd; }
            set { _capitalChargeInd = value; }
        }

        /*
        /// <summary>Represents the navigator which is mapped onto the association 'CaseSpecific.ChargeInfo.CaseParty - Case.CaseParty.ChargeInfos (m:1)'</summary>
        public virtual CaseParty CaseParty
        {
            get { return _caseParty; }
            set { _caseParty = value; }
        }*/
        /// <summary>Gets or sets the CasePartyId field. </summary>
        public virtual System.String CasePartyId
        {
            get { return _casePartyId; }
            set { _casePartyId = value; }
        }

        /// <summary>Gets or sets the ChargeDescription field. </summary>
        public virtual System.String ChargeDescription
        {
            get { return _chargeDescription; }
            set { _chargeDescription = value; }
        }

        /// <summary>Gets or sets the ChargeInfoId field. </summary>
        public virtual System.String ChargeInfoId
        {
            get { return _chargeInfoId; }
            set { _chargeInfoId = value; }
        }

        /// <summary>Gets or sets the ChargeNumber field. </summary>
        public virtual Nullable<System.Decimal> ChargeNumber
        {
            get { return _chargeNumber; }
            set { _chargeNumber = value; }
        }

        /// <summary>Gets or sets the ChargeSerialNumber field. </summary>
        public virtual Nullable<System.Decimal> ChargeSerialNumber
        {
            get { return _chargeSerialNumber; }
            set { _chargeSerialNumber = value; }
        }

        /// <summary>Gets or sets the ChargeStatus field. </summary>
        public virtual System.String ChargeStatus
        {
            get { return _chargeStatus; }
            set { _chargeStatus = value; }
        }

        /*
        /// <summary>Gets or sets the ChargeStatus field. </summary>
        public virtual Hearing ChargeStatusHrg
        {
            get { return _hearing; }
            set { _hearing = value; }
        }*/
        /// <summary>Gets or sets the ChargeStatusHrgId field. </summary>
        public virtual Nullable<System.Int64> ChargeStatusHrgId
        {
            get { return _chargeStatusHrgId; }
            set { _chargeStatusHrgId = value; }
        }

        /// <summary>Gets or sets the ChargeYear field. </summary>
        public virtual Nullable<System.Decimal> ChargeYear
        {
            get { return _chargeYear; }
            set { _chargeYear = value; }
        }

        /// <summary>Gets or sets the CoronerNoticeInd field. </summary>
        public virtual System.String CoronerNoticeInd
        {
            get { return _coronerNoticeInd; }
            set { _coronerNoticeInd = value; }
        }

        /*
        /// <summary>Represents the navigator which is mapped onto the association 'CaseSpecific.ChargeInfo.DocCaseParty - Document.DocCaseParty.ChargeInfos (m:1)'</summary>
        public virtual DocCaseParty DocCaseParty
        {
            get { return _docCaseParty; }
            set { _docCaseParty = value; }
        }*/
        /// <summary>Gets or sets the DCPID field. </summary>
        public virtual System.String DCPID
        {
            get { return _dcpId; }
            set { _dcpId = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'CaseSpecific.DrugInfo.ChargeInfo - CaseSpecific.ChargeInfo.DrugInfos (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<DrugInfo> DrugInfos
        {
            get { return _drugInfos; }
            set { _drugInfos = value; }
        }

        /// <summary>Gets or sets the ItemNo field. </summary>
        public virtual Nullable<System.Int32> ItemNo
        {
            get { return _itemNo; }
            set { _itemNo = value; }
        }

        /// <summary>Gets or sets the LastModifiedBy field. </summary>
        public virtual System.String LastModifiedBy
        {
            get { return _lastModifiedBy; }
            set { _lastModifiedBy = value; }
        }

        /// <summary>Gets or sets the LastModifiedDate field. </summary>
        public virtual System.DateTime LastModifiedDate
        {
            get { return _lastModifiedDate; }
            set { _lastModifiedDate = value; }
        }

        /// <summary>Gets or sets the MainChargeInd field. </summary>
        public virtual System.String MainChargeInd
        {
            get { return _mainChargeInd; }
            set { _mainChargeInd = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'CaseSpecific.ChargeInfo.MChargeType - Master.MChargeType.ChargeInfos (m:1)'</summary>
        public virtual MChargeType MChargeType
        {
            get { return _mChargeType; }
            set { _mChargeType = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'CaseSpecific.OffenceInfo.ChargeInfo - CaseSpecific.ChargeInfo.OffenceInfos (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<OffenceInfo> OffenceInfos
        {
            get { return _offenceInfos; }
            set { _offenceInfos = value; }
        }

        /// <summary>Gets or sets the PIChargeInd field. </summary>
        public virtual System.String PIChargeInd
        {
            get { return _pIChargeInd; }
            set { _pIChargeInd = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'CaseSpecific.RCriminalLegislationInfo.ChargeInfo - CaseSpecific.ChargeInfo.RCriminalLegislationInfos (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<RCriminalLegislationInfo> RCriminalLegislationInfos
        {
            get { return _rCriminalLegislationInfos; }
            set { _rCriminalLegislationInfos = value; }
        }

        /// <summary>Gets or sets the RelatedPICChargeNumber field. </summary>
        public virtual System.String RelatedPICChargeNumber
        {
            get { return _relatedPICChargeNumber; }
            set { _relatedPICChargeNumber = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'CaseSpecific.SentenceInfo.ChargeInfo - CaseSpecific.ChargeInfo.SentenceInfos (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<SentenceInfo> SentenceInfos
        {
            get { return _sentenceInfos; }
            set { _sentenceInfos = value; }
        }

        /// <summary>Gets or sets the SubmissionGroupId field. </summary>
        public virtual System.String SubmissionGroupId
        {
            get { return _submissionGroupId; }
            set { _submissionGroupId = value; }
        }

        public virtual string OutcomeCode
        {
            get;
            set;
        }

        public virtual string OutcomeRemarks
        {
            get;
            set;
        }

        public virtual string ChargeNo
        {
            get;
            set;
        }
        #endregion Properties

        #region Methods

        /// <summary>Determines whether the specified object is equal to this instance.</summary>
        /// <param name="obj">The <see cref="System.Object"/> to compare with this instance.</param>
        /// <returns><c>true</c> if the specified <see cref="System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        public override bool Equals(object obj)
        {
            if(obj == null)
            {
                return false;
            }
            ChargeInfo toCompareWith = obj as ChargeInfo;
            return toCompareWith == null ? false : ((this.ChargeInfoId == toCompareWith.ChargeInfoId));
        }

        /// <summary>Returns a hash code for this instance.</summary>
        /// <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        public override int GetHashCode()
        {
            int toReturn = base.GetHashCode();
            toReturn ^= this.ChargeInfoId.GetHashCode();
            return toReturn;
        }

        #endregion Methods
    }
}