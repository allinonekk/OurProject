#region Header

//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v3.0.</auto-generated>
//------------------------------------------------------------------------------

#endregion Header

namespace AllInOne.Legal.Entities.BackEnd
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;

    /// <summary>Class which represents the entity 'Enforcement.EMSSaleAppraiser'</summary>
    public partial class EMSSaleAppraiser : IEnforcement
    {
        #region Fields

        private Nullable<System.Decimal> _appraiseAmount;
        private Nullable<System.Decimal> _appraiserCharge;
        private Nullable<System.DateTime> _appraiserDateEngaged;
        private System.String _appraiserDetailId;
        private EMSSale _eMSSale;
        private EMSPaymentVoucher _eMSPaymentVoucher;
        private System.String _lastModifiedBy;
        private System.DateTime _lastModifiedDate;
        private MEMSAppraiser _mEMSAppraiser;
        private System.String _otherAppraiserName;

        #endregion Fields

        #region Constructors

        /// <summary>Initializes a new instance of the <see cref="EMSSaleAppraiser"/> class.</summary>
        public EMSSaleAppraiser()
            : base()
        {
        }

        #endregion Constructors

        #region Properties

        /// <summary>Gets or sets the AppraiseAmount field. </summary>
        public virtual Nullable<System.Decimal> AppraiseAmount
        {
            get { return _appraiseAmount; }
            set { _appraiseAmount = value; }
        }

        /// <summary>Gets or sets the AppraiserCharge field. </summary>
        public virtual Nullable<System.Decimal> AppraiserCharge
        {
            get { return _appraiserCharge; }
            set { _appraiserCharge = value; }
        }

        /// <summary>Gets or sets the AppraiserDateEngaged field. </summary>
        public virtual Nullable<System.DateTime> AppraiserDateEngaged
        {
            get { return _appraiserDateEngaged; }
            set { _appraiserDateEngaged = value; }
        }

        /// <summary>Gets or sets the AppraiserDetailId field. </summary>
        public virtual System.String AppraiserDetailId
        {
            get { return _appraiserDetailId; }
            set { _appraiserDetailId = value; }
        }

        /// <summary>Gets or sets the EMSSale field. </summary>
        public virtual EMSSale EMSSale
        {
            get { return _eMSSale; }
            set { _eMSSale = value; }
        }

        /// <summary>Gets or sets the LastModifiedBy field. </summary>
        public virtual System.String LastModifiedBy
        {
            get { return _lastModifiedBy; }
            set { _lastModifiedBy = value; }
        }

        /// <summary>Gets or sets the LastModifiedDate field. </summary>
        public virtual System.DateTime LastModifiedDate
        {
            get { return _lastModifiedDate; }
            set { _lastModifiedDate = value; }
        }

        /// <summary>Gets or sets the MEMSAppraiser field. </summary>
        public virtual MEMSAppraiser MEMSAppraiser
        {
            get { return _mEMSAppraiser; }
            set { _mEMSAppraiser = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Enforcement.EMSSaleAppraiser.EMSPaymentVoucher - Enforcement.EMSPaymentVoucher.EMSSaleAppraisers (m:1)'</summary>
        public virtual EMSPaymentVoucher EMSPaymentVoucher
        {
            get { return _eMSPaymentVoucher; }
            set { _eMSPaymentVoucher = value; }
        }

        /// <summary>Gets or sets the OtherAppraiserName field. </summary>
        public virtual System.String OtherAppraiserName
        {
            get { return _otherAppraiserName; }
            set { _otherAppraiserName = value; }
        }

        #endregion Properties

        #region Methods

        /// <summary>Determines whether the specified object is equal to this instance.</summary>
        /// <param name="obj">The <see cref="System.Object"/> to compare with this instance.</param>
        /// <returns><c>true</c> if the specified <see cref="System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        public override bool Equals(object obj)
        {
            if(obj == null)
            {
                return false;
            }
            EMSSaleAppraiser toCompareWith = obj as EMSSaleAppraiser;
            return toCompareWith == null ? false : ((this.AppraiserDetailId == toCompareWith.AppraiserDetailId));
        }

        /// <summary>Returns a hash code for this instance.</summary>
        /// <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        public override int GetHashCode()
        {
            int toReturn = base.GetHashCode();
            toReturn ^= this.AppraiserDetailId.GetHashCode();
            return toReturn;
        }

        #endregion Methods
    }
}