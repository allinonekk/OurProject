#region Header

//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v3.0.</auto-generated>
//------------------------------------------------------------------------------

#endregion Header

namespace AllInOne.Legal.Entities.BackEnd
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;

    /// <summary>Class which represents the entity 'Master.MForumType'</summary>
    public partial class MForumType : IMaster
    {
        #region Fields

        private System.Collections.Generic.ICollection<CaseInfo> _caseInfos;
        private System.Collections.Generic.ICollection<CaveatInfo> _caveatInfos;
        private System.String _courtSeal;
        private System.String _description;
        private System.Collections.Generic.ICollection<DocumentInfo> _documentInfos;
        private System.String _forumId;
        private System.String _lastModifiedBy;
        private System.DateTime _lastModifiedDate;
        private System.Collections.Generic.ICollection<MHRGBeforeType> _mHRGBeforeTypes;
        private System.Collections.Generic.ICollection<MRulesOfCourtOrder> _mRulesOfCourtOrders;
        private System.String _neutralCiteCode;
        private System.String _regSignature;
        private System.Collections.Generic.ICollection<RMNOAForumHrgType> _rMNOAForumHrgTypes;
        private System.Int32 _seqNo;

        #endregion Fields

        #region Constructors

        /// <summary>Initializes a new instance of the <see cref="MForumType"/> class.</summary>
        public MForumType()
            : base()
        {
            _caseInfos = new System.Collections.Generic.HashSet<CaseInfo>();
            _caveatInfos = new System.Collections.Generic.HashSet<CaveatInfo>();
            _documentInfos = new System.Collections.Generic.HashSet<DocumentInfo>();
            _mHRGBeforeTypes = new System.Collections.Generic.HashSet<MHRGBeforeType>();
            _mRulesOfCourtOrders = new System.Collections.Generic.HashSet<MRulesOfCourtOrder>();
            _rMNOAForumHrgTypes = new System.Collections.Generic.HashSet<RMNOAForumHrgType>();
        }

        #endregion Constructors

        #region Properties

      

        /// <summary>Represents the navigator which is mapped onto the association 'Master.MForumType.MCourtType - Master.MCourtType.MForumTypes (m:1)'</summary>
        public virtual string CourtID
        {
            get;
            set;
        }

        /// <summary>Gets or sets the CourtSeal field. </summary>
        public virtual System.String CourtSeal
        {
            get { return _courtSeal; }
            set { _courtSeal = value; }
        }

        /// <summary>Gets or sets the Description field. </summary>
        public virtual System.String Description
        {
            get { return _description; }
            set { _description = value; }
        }

       
        /// <summary>Gets or sets the ForumId field. </summary>
        public virtual System.String ForumId
        {
            get { return _forumId; }
            set { _forumId = value; }
        }

        /// <summary>Gets or sets the LastModifiedBy field. </summary>
        public virtual System.String LastModifiedBy
        {
            get { return _lastModifiedBy; }
            set { _lastModifiedBy = value; }
        }

        /// <summary>Gets or sets the LastModifiedDate field. </summary>
        public virtual System.DateTime LastModifiedDate
        {
            get { return _lastModifiedDate; }
            set { _lastModifiedDate = value; }
        }

            /// <summary>Gets or sets the NeutralCiteCode field. </summary>
        public virtual System.String NeutralCiteCode
        {
            get { return _neutralCiteCode; }
            set { _neutralCiteCode = value; }
        }

        /// <summary>Gets or sets the RegSignature field. </summary>
        public virtual System.String RegSignature
        {
            get { return _regSignature; }
            set { _regSignature = value; }
        }

      
        /// <summary>Gets or sets the SeqNo field. </summary>
        public virtual System.Int32 SeqNo
        {
            get { return _seqNo; }
            set { _seqNo = value; }
        }

        public virtual String HeaderCentreImagePath
        {
            get;
            set;
        }

        public virtual String HeaderRightImagePath
        {
            get;
            set;
        }

        public virtual String FooterCentreImagePath
        {
            get;
            set;
        }

        public virtual String ADMHeaderRightImagePath
        {
            get;
            set;
        }

        public virtual String ForumSeal
        {
            get;
            set;
        }

        public virtual String ForumSignature
        {
            get;
            set;
        }

        public virtual String EFormHeaderDescription
        {
            get;
            set;
        }

        public virtual String EFormFooterDescription
        {
            get;
            set;
        }

        #endregion Properties

        #region Methods

        /// <summary>Determines whether the specified object is equal to this instance.</summary>
        /// <param name="obj">The <see cref="System.Object"/> to compare with this instance.</param>
        /// <returns><c>true</c> if the specified <see cref="System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        public override bool Equals(object obj)
        {
            if(obj == null)
            {
                return false;
            }
            MForumType toCompareWith = obj as MForumType;
            return toCompareWith == null ? false : ((this.ForumId == toCompareWith.ForumId));
        }

        /// <summary>Returns a hash code for this instance.</summary>
        /// <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        public override int GetHashCode()
        {
            int toReturn = base.GetHashCode();
            toReturn ^= this.ForumId.GetHashCode();
            return toReturn;
        }

        #endregion Methods
    }
}