#region Header

//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v3.0.</auto-generated>
//------------------------------------------------------------------------------

#endregion Header

namespace AllInOne.Legal.Entities.BackEnd
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;

    /// <summary>Class which represents the entity 'Enforcement.EMSRecTrans'</summary>
    public partial class EMSRecTrans : IEnforcement
    {
        #region Fields

        private System.Decimal _amount;
        private System.Collections.Generic.ICollection<EMSExecLedger> _eMSExecLedgers;
        private System.Collections.Generic.ICollection<EMSRecChequeAudit> _eMSRecChequeAudits;
        private EMSReceipt _eMSReceipt;

        //private System.String _eMSReceiptId;
        private System.String _eMSRecTransId;
        private System.String _isDishonoured;
        private System.String _lastModifiedBy;
        private System.DateTime _lastModifiedDate;
        private MEMSRecBank _mEMSRecBank;
        private MEMSRecTransMode _mEMSRecTransMode;
        private System.String _referenceNo;

        #endregion Fields

        #region Constructors

        /// <summary>Initializes a new instance of the <see cref="EMSRecChequeAudit"/> class.</summary>
        public EMSRecTrans()
            : base()
        {
            _eMSRecChequeAudits = new System.Collections.Generic.HashSet<EMSRecChequeAudit>();
            _eMSExecLedgers = new System.Collections.Generic.HashSet<EMSExecLedger>();
        }

        #endregion Constructors

        #region Properties

        /// <summary>Gets or sets the Amount field. </summary>
        public virtual System.Decimal Amount
        {
            get { return _amount; }
            set { _amount = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Enforcement.EMSExecLedger.EMSRecTrans - Enforcement.EMSRecTrans.EMSExecLedgers (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<EMSExecLedger> EMSExecLedgers
        {
            get { return _eMSExecLedgers; }
            set { _eMSExecLedgers = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Enforcement.EMSRecChequeAudits.EMSRecTrans - Enforcement.EMSRecTrans.EMSRecChequeAuditss (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<EMSRecChequeAudit> EMSRecChequeAudits
        {
            get { return _eMSRecChequeAudits; }
            set { _eMSRecChequeAudits = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Enforcement.EMSRecTrans.EMSReceipt - Enforcement.EMSReceipt.EMSRecTrans (m:1)'</summary>
        public virtual EMSReceipt EMSReceipt
        {
            get { return _eMSReceipt; }
            set { _eMSReceipt = value; }
        }

        /// <summary>Gets or sets the EMSReceiptId field. </summary>
        //public virtual System.String EMSReceiptId
        //{
        //    get { return _eMSReceiptId; }
        //    set { _eMSReceiptId = value; }
        //}
        /// <summary>Gets or sets the EMSRecTransId field. </summary>
        public virtual System.String EMSRecTransId
        {
            get { return _eMSRecTransId; }
            set { _eMSRecTransId = value; }
        }

        /// <summary>Gets or sets the IsDishonoured field. </summary>
        public virtual System.String IsDishonoured
        {
            get { return _isDishonoured; }
            set { _isDishonoured = value; }
        }

        /// <summary>Gets or sets the LastModifiedBy field. </summary>
        public virtual System.String LastModifiedBy
        {
            get { return _lastModifiedBy; }
            set { _lastModifiedBy = value; }
        }

        /// <summary>Gets or sets the LastModifiedDate field. </summary>
        public virtual System.DateTime LastModifiedDate
        {
            get { return _lastModifiedDate; }
            set { _lastModifiedDate = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Enforcement.EMSRecTrans.MEMSRecBank - Master.MEMSRecBank.EMSRecTrans (m:1)'</summary>
        public virtual MEMSRecBank MEMSRecBank
        {
            get { return _mEMSRecBank; }
            set { _mEMSRecBank = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Enforcement.EMSRecTrans.MEMSRecTransMode - Master.MEMSRecTransMode.EMSRecTrans (m:1)'</summary>
        public virtual MEMSRecTransMode MEMSRecTransMode
        {
            get { return _mEMSRecTransMode; }
            set { _mEMSRecTransMode = value; }
        }

        /// <summary>Gets or sets the ReferenceNo field. </summary>
        public virtual System.String ReferenceNo
        {
            get { return _referenceNo; }
            set { _referenceNo = value; }
        }

        #endregion Properties

        #region Methods

        /// <summary>Determines whether the specified object is equal to this instance.</summary>
        /// <param name="obj">The <see cref="System.Object"/> to compare with this instance.</param>
        /// <returns><c>true</c> if the specified <see cref="System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        public override bool Equals(object obj)
        {
            if(obj == null)
            {
                return false;
            }
            EMSRecTrans toCompareWith = obj as EMSRecTrans;
            return toCompareWith == null ? false : ((this.EMSRecTransId == toCompareWith.EMSRecTransId));
        }

        /// <summary>Returns a hash code for this instance.</summary>
        /// <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        public override int GetHashCode()
        {
            int toReturn = base.GetHashCode();
            toReturn ^= this.EMSRecTransId.GetHashCode();
            return toReturn;
        }

        #endregion Methods
    }
}