#region Header

//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v3.0.</auto-generated>
//------------------------------------------------------------------------------

#endregion Header

namespace AllInOne.Legal.Entities.BackEnd
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;

    /// <summary>Class which represents the entity 'Master.MFilingFeeChargingMechanism'</summary>
    public partial class MFilingFeeChargingMechanism : IMaster
    {
        #region Fields

        private Nullable<System.Decimal> _additionalFee;
        private Nullable<System.Decimal> _baseFee;
        private System.DateTime _effectiveFrom;
        private Nullable<System.DateTime> _effectiveTo;
        private System.String _feeChargeId;
        private Nullable<System.Decimal> _flatFeeRate;
        private System.String _isInterfaced;
        private System.String _lastModifiedBy;
        private Nullable<System.DateTime> _lastModifiedDate;
        private MFilingFee _mFilingFee;
        private System.Collections.Generic.ICollection<MFilingFeeTier> _mFilingFeeTiers;
        private Nullable<System.Decimal> _minimumFee;
        private System.String _obsInd;
        private Nullable<System.Decimal> _perRateFee;
        private System.String _perRateUnit;
        private System.Decimal _procFee;
        private System.Decimal _transFee;
        private Nullable<System.Decimal> _urgentFee;

        #endregion Fields

        #region Constructors

        /// <summary>Initializes a new instance of the <see cref="MFilingFeeChargingMechanism"/> class.</summary>
        public MFilingFeeChargingMechanism()
            : base()
        {
            _mFilingFeeTiers = new System.Collections.Generic.HashSet<MFilingFeeTier>();
        }

        #endregion Constructors

        #region Properties

        /// <summary>Gets or sets the AdditionalFee field. </summary>
        public virtual Nullable<System.Decimal> AdditionalFee
        {
            get { return _additionalFee; }
            set { _additionalFee = value; }
        }

        /// <summary>Gets or sets the BaseFee field. </summary>
        public virtual Nullable<System.Decimal> BaseFee
        {
            get { return _baseFee; }
            set { _baseFee = value; }
        }

        /// <summary>Gets or sets the EffectiveFrom field. </summary>
        public virtual System.DateTime EffectiveFrom
        {
            get { return _effectiveFrom; }
            set { _effectiveFrom = value; }
        }

        /// <summary>Gets or sets the EffectiveTo field. </summary>
        public virtual Nullable<System.DateTime> EffectiveTo
        {
            get { return _effectiveTo; }
            set { _effectiveTo = value; }
        }

        /// <summary>Gets or sets the FeeChargeId field. </summary>
        public virtual System.String FeeChargeId
        {
            get { return _feeChargeId; }
            set { _feeChargeId = value; }
        }

        /// <summary>Gets or sets the FlatFeeRate field. </summary>
        public virtual Nullable<System.Decimal> FlatFeeRate
        {
            get { return _flatFeeRate; }
            set { _flatFeeRate = value; }
        }

        /// <summary>Gets or sets the IsInterfaced field. </summary>
        public virtual System.String IsInterfaced
        {
            get { return _isInterfaced; }
            set { _isInterfaced = value; }
        }

        /// <summary>Gets or sets the LastModifiedBy field. </summary>
        public virtual System.String LastModifiedBy
        {
            get { return _lastModifiedBy; }
            set { _lastModifiedBy = value; }
        }

        /// <summary>Gets or sets the LastModifiedDate field. </summary>
        public virtual Nullable<System.DateTime> LastModifiedDate
        {
            get { return _lastModifiedDate; }
            set { _lastModifiedDate = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Master.MFilingFeeChargingMechanism.MFilingFee - Master.MFilingFee.MFilingFeeChargingMechanisms (m:1)'</summary>
        public virtual MFilingFee MFilingFee
        {
            get { return _mFilingFee; }
            set { _mFilingFee = value; }
        }

        /// <summary>Gets or sets the MinimumFee field. </summary>
        public virtual Nullable<System.Decimal> MinimumFee
        {
            get { return _minimumFee; }
            set { _minimumFee = value; }
        }

        /// <summary>Gets or sets the ObsInd field. </summary>
        public virtual System.String ObsInd
        {
            get { return _obsInd; }
            set { _obsInd = value; }
        }

        /// <summary>Gets or sets the PerRateFee field. </summary>
        public virtual Nullable<System.Decimal> PerRateFee
        {
            get { return _perRateFee; }
            set { _perRateFee = value; }
        }

        /// <summary>Gets or sets the PerRateUnit field. </summary>
        public virtual System.String PerRateUnit
        {
            get { return _perRateUnit; }
            set { _perRateUnit = value; }
        }

        /// <summary>Gets or sets the ProcFee field. </summary>
        public virtual System.Decimal ProcFee
        {
            get { return _procFee; }
            set { _procFee = value; }
        }

        /// <summary>Gets or sets the TransFee field. </summary>
        public virtual System.Decimal TransFee
        {
            get { return _transFee; }
            set { _transFee = value; }
        }

        /// <summary>Gets or sets the UrgentFee field. </summary>
        public virtual Nullable<System.Decimal> UrgentFee
        {
            get { return _urgentFee; }
            set { _urgentFee = value; }
        }
        public virtual decimal? Perdocument
        {
            get;
            set;
        }

        public virtual int? InExcessOf
        {
            get;
            set;
        }

        public virtual decimal? CourtFeePercent
        {
            get;
            set;
        }

        public virtual  decimal? TierType
        {
            get;
            set;
        }

        public virtual string ForumID
        {
            get;
            set;
        }
        #endregion Properties

        #region Methods

        /// <summary>Determines whether the specified object is equal to this instance.</summary>
        /// <param name="obj">The <see cref="System.Object"/> to compare with this instance.</param>
        /// <returns><c>true</c> if the specified <see cref="System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        public override bool Equals(object obj)
        {
            if(obj == null)
            {
                return false;
            }
            MFilingFeeChargingMechanism toCompareWith = obj as MFilingFeeChargingMechanism;
            return toCompareWith == null ? false : ((this.FeeChargeId == toCompareWith.FeeChargeId));
        }

        /// <summary>Returns a hash code for this instance.</summary>
        /// <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        public override int GetHashCode()
        {
            int toReturn = base.GetHashCode();
            toReturn ^= this.FeeChargeId.GetHashCode();
            return toReturn;
        }

        #endregion Methods
    }
}