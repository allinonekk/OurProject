#region Header

//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v3.0.</auto-generated>
//------------------------------------------------------------------------------

#endregion Header

namespace AllInOne.Legal.Entities.BackEnd
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;

    /// <summary>Class which represents the entity 'Master.MPartyType'</summary>
    public partial class MPartyType : IMaster
    {
        #region Fields

        private System.Collections.Generic.ICollection<CaseParty> _caseParties;
        private System.String _description;
        private System.String _isInterfaced;
        private System.String _lastModifiedBy;
        private System.DateTime _lastModifiedDate;
        private System.Collections.Generic.ICollection<DocCaseParty> _mCasePartyTypeCode;
        private System.Collections.Generic.ICollection<DocCaseParty> _mSubCasePartyTypeCode;
        private System.String _obsInd;
        private System.String _partyTypeCode;
        private System.Collections.Generic.ICollection<SubCaseParty> _subCaseParties;

        #endregion Fields

        #region Constructors

        /// <summary>Initializes a new instance of the <see cref="MPartyType"/> class.</summary>
        public MPartyType()
            : base()
        {
            _caseParties = new System.Collections.Generic.HashSet<CaseParty>();
            _mCasePartyTypeCode = new System.Collections.Generic.HashSet<DocCaseParty>();
            _mSubCasePartyTypeCode = new System.Collections.Generic.HashSet<DocCaseParty>();
            _subCaseParties = new System.Collections.Generic.HashSet<SubCaseParty>();
        }

        #endregion Constructors

        #region Properties

        /// <summary>Represents the navigator which is mapped onto the association 'Case.CaseParty.MPartyType - Master.MPartyType.CaseParties (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<CaseParty> CaseParties
        {
            get { return _caseParties; }
            set { _caseParties = value; }
        }

        /// <summary>Gets or sets the Description field. </summary>
        public virtual System.String Description
        {
            get { return _description; }
            set { _description = value; }
        }

        /// <summary>Gets or sets the IsInterfaced field. </summary>
        public virtual System.String IsInterfaced
        {
            get { return _isInterfaced; }
            set { _isInterfaced = value; }
        }

        /// <summary>Gets or sets the LastModifiedBy field. </summary>
        public virtual System.String LastModifiedBy
        {
            get { return _lastModifiedBy; }
            set { _lastModifiedBy = value; }
        }

        /// <summary>Gets or sets the LastModifiedDate field. </summary>
        public virtual System.DateTime LastModifiedDate
        {
            get { return _lastModifiedDate; }
            set { _lastModifiedDate = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MCasePartyTypeCode - Master.MPartyType.MCasePartyTypeCode (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<DocCaseParty> MCasePartyTypeCode
        {
            get { return _mCasePartyTypeCode; }
            set { _mCasePartyTypeCode = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'Document.DocCaseParty.MSubCasePartyTypeCode - Master.MPartyType.MSubCasePartyTypeCode (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<DocCaseParty> MSubCasePartyTypeCode
        {
            get { return _mSubCasePartyTypeCode; }
            set { _mSubCasePartyTypeCode = value; }
        }

        /// <summary>Gets or sets the ObsInd field. </summary>
        public virtual System.String ObsInd
        {
            get { return _obsInd; }
            set { _obsInd = value; }
        }

        /// <summary>Gets or sets the PartyTypeCode field. </summary>
        public virtual System.String PartyTypeCode
        {
            get { return _partyTypeCode; }
            set { _partyTypeCode = value; }
        }

        /// <summary>Represents the navigator which is mapped onto the association 'SubCase.SubCaseParty.MPartyType - Master.MPartyType.SubCaseParties (m:1)'</summary>
        public virtual System.Collections.Generic.ICollection<SubCaseParty> SubCaseParties
        {
            get { return _subCaseParties; }
            set { _subCaseParties = value; }
        }

        #endregion Properties

        #region Methods

        /// <summary>Determines whether the specified object is equal to this instance.</summary>
        /// <param name="obj">The <see cref="System.Object"/> to compare with this instance.</param>
        /// <returns><c>true</c> if the specified <see cref="System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        public override bool Equals(object obj)
        {
            if(obj == null)
            {
                return false;
            }
            MPartyType toCompareWith = obj as MPartyType;
            return toCompareWith == null ? false : ((this.PartyTypeCode == toCompareWith.PartyTypeCode));
        }

        /// <summary>Returns a hash code for this instance.</summary>
        /// <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        public override int GetHashCode()
        {
            int toReturn = base.GetHashCode();
            toReturn ^= this.PartyTypeCode.GetHashCode();
            return toReturn;
        }

        #endregion Methods
    }
}