#region Header

//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v3.0.</auto-generated>
//------------------------------------------------------------------------------

#endregion Header

namespace AllInOne.Legal.Entities.BackEnd
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;

    /// <summary>Class which represents the entity 'Enforcement.SerialNumber'</summary>
    public partial class SerialNumber : IMaster
    {
        #region Fields

        private System.String _description;
        private System.String _docPrefix;
        private System.String _generateFrequency;
        private System.String _lastModifiedBy;
        private System.DateTime _lastModifiedDate;
        private Nullable<System.Int32> _lengthOfValue;
        private System.String _sNo;
        private System.Int32 _year;
        private System.String _courtId;
        private System.String _forumId;

        #endregion Fields

        #region Constructors

        /// <summary>Initializes a new instance of the <see cref="SerialNumber"/> class.</summary>
        public SerialNumber()
            : base()
        {
        }

        #endregion Constructors

        #region Properties

        /// <summary>Gets or sets the Description field. </summary>
        public virtual String Description
        {
            get { return _description; }
            set { _description = value; }
        }

        /// <summary>Gets or sets the DocPrefix field. </summary>
        public virtual System.String DocPrefix
        {
            get { return _docPrefix; }
            set { _docPrefix = value; }
        }

        /// <summary>Gets or sets the GenerateFrequency field. </summary>
        public virtual System.String GenerateFrequency
        {
            get { return _generateFrequency; }
            set { _generateFrequency = value; }
        }

        /// <summary>Gets or sets the LastModifiedBy field. </summary>
        public virtual System.String LastModifiedBy
        {
            get { return _lastModifiedBy; }
            set { _lastModifiedBy = value; }
        }

        /// <summary>Gets or sets the LastModifiedDate field. </summary>
        public virtual System.DateTime LastModifiedDate
        {
            get { return _lastModifiedDate; }
            set { _lastModifiedDate = value; }
        }

        /// <summary>Gets or sets the LengthOfValue field. </summary>
        public virtual Nullable<System.Int32> LengthOfValue
        {
            get { return _lengthOfValue; }
            set { _lengthOfValue = value; }
        }

        /// <summary>Gets or sets the SNo field. </summary>
        public virtual System.String SNo
        {
            get { return _sNo; }
            set { _sNo = value; }
        }

        /// <summary>Gets or sets the Year field. </summary>
        public virtual System.Int32 Year
        {
            get { return _year; }
            set { _year = value; }
        }

        /// <summary>Gets or sets the CourtId field. </summary>
        public virtual String CourtId
        {
            get { return _courtId; }
            set { _courtId = value; }
        }

        /// <summary>Gets or sets the ForumId field. </summary>
        public virtual String ForumId
        {
            get { return _forumId; }
            set { _forumId = value; }
        }

        #endregion Properties

        #region Methods

        /// <summary>Determines whether the specified object is equal to this instance.</summary>
        /// <param name="obj">The <see cref="System.Object"/> to compare with this instance.</param>
        /// <returns><c>true</c> if the specified <see cref="System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        public override bool Equals(object obj)
        {
            if(obj == null)
            {
                return false;
            }
            SerialNumber toCompareWith = obj as SerialNumber;
            return toCompareWith == null ? false : ((this.DocPrefix == toCompareWith.DocPrefix && this.Year == toCompareWith.Year));
        }

        /// <summary>Returns a hash code for this instance.</summary>
        /// <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        public override int GetHashCode()
        {
            int toReturn = base.GetHashCode();
            toReturn ^= this.DocPrefix.GetHashCode();
            toReturn ^= this.Year.GetHashCode();
            return toReturn;
        }

        #endregion Methods
    }
}